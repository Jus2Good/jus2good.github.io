(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("framer"), require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["framer", "react"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("framer"), require("react")) : factory(root["Framer"], root["React"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function(__WEBPACK_EXTERNAL_MODULE_framer__, __WEBPACK_EXTERNAL_MODULE_react__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./package.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-book/build/index.js":
/*!***********************************************************************************************************************************************************************!*\
  !*** /Users/lesang/Library/Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-book/build/index.js ***!
  \***********************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DeviceSkin {\n    constructor() {\n        this.image = \"device.png\";\n        this.imageWidth = 4102;\n        this.imageHeight = 2474;\n        this.padding = 40;\n        this.background = \"white\";\n    }\n}\nexports.DeviceSkin = DeviceSkin;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL2xlc2FuZy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvYmNkNDM1MDYtNjU5NC00MjZjLTliZDMtNWVmZGNlMGQzNTE5L25vZGVfbW9kdWxlcy9AZnJhbWVyL2ZyYW1lci5kZXZpY2Utc2tpbi1taWNyb3NvZnQtc3VyZmFjZS1ib29rL2J1aWxkL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi8uLi9DYWNoZXMvRnJhbWVyL3Byb2plY3RzL2JjZDQzNTA2LTY1OTQtNDI2Yy05YmQzLTVlZmRjZTBkMzUxOS9ub2RlX21vZHVsZXMvQGZyYW1lci9mcmFtZXIuZGV2aWNlLXNraW4tbWljcm9zb2Z0LXN1cmZhY2UtYm9vay9idWlsZC9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY2xhc3MgRGV2aWNlU2tpbiB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaW1hZ2UgPSBcImRldmljZS5wbmdcIjtcbiAgICAgICAgdGhpcy5pbWFnZVdpZHRoID0gNDEwMjtcbiAgICAgICAgdGhpcy5pbWFnZUhlaWdodCA9IDI0NzQ7XG4gICAgICAgIHRoaXMucGFkZGluZyA9IDQwO1xuICAgICAgICB0aGlzLmJhY2tncm91bmQgPSBcIndoaXRlXCI7XG4gICAgfVxufVxuZXhwb3J0cy5EZXZpY2VTa2luID0gRGV2aWNlU2tpbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-book/build/index.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-pro-4/build/index.js":
/*!************************************************************************************************************************************************************************!*\
  !*** /Users/lesang/Library/Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-pro-4/build/index.js ***!
  \************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DeviceSkin {\n    constructor() {\n        this.image = \"device.png\";\n        this.imageWidth = 3064;\n        this.imageHeight = 2120;\n        this.padding = 40;\n        this.background = \"white\";\n    }\n}\nexports.DeviceSkin = DeviceSkin;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL2xlc2FuZy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvYmNkNDM1MDYtNjU5NC00MjZjLTliZDMtNWVmZGNlMGQzNTE5L25vZGVfbW9kdWxlcy9AZnJhbWVyL2ZyYW1lci5kZXZpY2Utc2tpbi1taWNyb3NvZnQtc3VyZmFjZS1wcm8tNC9idWlsZC9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vLi4vQ2FjaGVzL0ZyYW1lci9wcm9qZWN0cy9iY2Q0MzUwNi02NTk0LTQyNmMtOWJkMy01ZWZkY2UwZDM1MTkvbm9kZV9tb2R1bGVzL0BmcmFtZXIvZnJhbWVyLmRldmljZS1za2luLW1pY3Jvc29mdC1zdXJmYWNlLXByby00L2J1aWxkL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jbGFzcyBEZXZpY2VTa2luIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5pbWFnZSA9IFwiZGV2aWNlLnBuZ1wiO1xuICAgICAgICB0aGlzLmltYWdlV2lkdGggPSAzMDY0O1xuICAgICAgICB0aGlzLmltYWdlSGVpZ2h0ID0gMjEyMDtcbiAgICAgICAgdGhpcy5wYWRkaW5nID0gNDA7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZCA9IFwid2hpdGVcIjtcbiAgICB9XG59XG5leHBvcnRzLkRldmljZVNraW4gPSBEZXZpY2VTa2luO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-pro-4/build/index.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-sony-w850c/build/index.js":
/*!***********************************************************************************************************************************************************!*\
  !*** /Users/lesang/Library/Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-sony-w850c/build/index.js ***!
  \***********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DeviceSkin {\n    constructor() {\n        this.image = \"device.png\";\n        this.imageWidth = 1320;\n        this.imageHeight = 860;\n        this.padding = 40;\n        this.background = \"white\";\n    }\n}\nexports.DeviceSkin = DeviceSkin;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL2xlc2FuZy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvYmNkNDM1MDYtNjU5NC00MjZjLTliZDMtNWVmZGNlMGQzNTE5L25vZGVfbW9kdWxlcy9AZnJhbWVyL2ZyYW1lci5kZXZpY2Utc2tpbi1zb255LXc4NTBjL2J1aWxkL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi8uLi9DYWNoZXMvRnJhbWVyL3Byb2plY3RzL2JjZDQzNTA2LTY1OTQtNDI2Yy05YmQzLTVlZmRjZTBkMzUxOS9ub2RlX21vZHVsZXMvQGZyYW1lci9mcmFtZXIuZGV2aWNlLXNraW4tc29ueS13ODUwYy9idWlsZC9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY2xhc3MgRGV2aWNlU2tpbiB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaW1hZ2UgPSBcImRldmljZS5wbmdcIjtcbiAgICAgICAgdGhpcy5pbWFnZVdpZHRoID0gMTMyMDtcbiAgICAgICAgdGhpcy5pbWFnZUhlaWdodCA9IDg2MDtcbiAgICAgICAgdGhpcy5wYWRkaW5nID0gNDA7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZCA9IFwid2hpdGVcIjtcbiAgICB9XG59XG5leHBvcnRzLkRldmljZVNraW4gPSBEZXZpY2VTa2luO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-sony-w850c/build/index.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/sjlee.twitch-player-and-chat/build/index.js":
/*!**********************************************************************************************************************************************************!*\
  !*** /Users/lesang/Library/Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/sjlee.twitch-player-and-chat/build/index.js ***!
  \**********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! framer */ \"framer\"), __webpack_require__(/*! react */ \"react\"));\n\telse { var i, a; }\n})(window, function(__WEBPACK_EXTERNAL_MODULE_framer__, __WEBPACK_EXTERNAL_MODULE_react__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./package.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-book/build/index.js\":\n/*!***********************************************************************************************************************************************************************!*\\\n  !*** /Users/lesang/Library/Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-book/build/index.js ***!\n  \\***********************************************************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nclass DeviceSkin {\\n    constructor() {\\n        this.image = \\\"device.png\\\";\\n        this.imageWidth = 4102;\\n        this.imageHeight = 2474;\\n        this.padding = 40;\\n        this.background = \\\"white\\\";\\n    }\\n}\\nexports.DeviceSkin = DeviceSkin;\\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL2xlc2FuZy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvYmNkNDM1MDYtNjU5NC00MjZjLTliZDMtNWVmZGNlMGQzNTE5L25vZGVfbW9kdWxlcy9AZnJhbWVyL2ZyYW1lci5kZXZpY2Utc2tpbi1taWNyb3NvZnQtc3VyZmFjZS1ib29rL2J1aWxkL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi8uLi9DYWNoZXMvRnJhbWVyL3Byb2plY3RzL2JjZDQzNTA2LTY1OTQtNDI2Yy05YmQzLTVlZmRjZTBkMzUxOS9ub2RlX21vZHVsZXMvQGZyYW1lci9mcmFtZXIuZGV2aWNlLXNraW4tbWljcm9zb2Z0LXN1cmZhY2UtYm9vay9idWlsZC9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY2xhc3MgRGV2aWNlU2tpbiB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaW1hZ2UgPSBcImRldmljZS5wbmdcIjtcbiAgICAgICAgdGhpcy5pbWFnZVdpZHRoID0gNDEwMjtcbiAgICAgICAgdGhpcy5pbWFnZUhlaWdodCA9IDI0NzQ7XG4gICAgICAgIHRoaXMucGFkZGluZyA9IDQwO1xuICAgICAgICB0aGlzLmJhY2tncm91bmQgPSBcIndoaXRlXCI7XG4gICAgfVxufVxuZXhwb3J0cy5EZXZpY2VTa2luID0gRGV2aWNlU2tpbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-book/build/index.js\\n\");\n\n/***/ }),\n\n/***/ \"../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-pro-4/build/index.js\":\n/*!************************************************************************************************************************************************************************!*\\\n  !*** /Users/lesang/Library/Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-pro-4/build/index.js ***!\n  \\************************************************************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nclass DeviceSkin {\\n    constructor() {\\n        this.image = \\\"device.png\\\";\\n        this.imageWidth = 3064;\\n        this.imageHeight = 2120;\\n        this.padding = 40;\\n        this.background = \\\"white\\\";\\n    }\\n}\\nexports.DeviceSkin = DeviceSkin;\\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL2xlc2FuZy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvYmNkNDM1MDYtNjU5NC00MjZjLTliZDMtNWVmZGNlMGQzNTE5L25vZGVfbW9kdWxlcy9AZnJhbWVyL2ZyYW1lci5kZXZpY2Utc2tpbi1taWNyb3NvZnQtc3VyZmFjZS1wcm8tNC9idWlsZC9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vLi4vLi4vQ2FjaGVzL0ZyYW1lci9wcm9qZWN0cy9iY2Q0MzUwNi02NTk0LTQyNmMtOWJkMy01ZWZkY2UwZDM1MTkvbm9kZV9tb2R1bGVzL0BmcmFtZXIvZnJhbWVyLmRldmljZS1za2luLW1pY3Jvc29mdC1zdXJmYWNlLXByby00L2J1aWxkL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jbGFzcyBEZXZpY2VTa2luIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5pbWFnZSA9IFwiZGV2aWNlLnBuZ1wiO1xuICAgICAgICB0aGlzLmltYWdlV2lkdGggPSAzMDY0O1xuICAgICAgICB0aGlzLmltYWdlSGVpZ2h0ID0gMjEyMDtcbiAgICAgICAgdGhpcy5wYWRkaW5nID0gNDA7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZCA9IFwid2hpdGVcIjtcbiAgICB9XG59XG5leHBvcnRzLkRldmljZVNraW4gPSBEZXZpY2VTa2luO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-pro-4/build/index.js\\n\");\n\n/***/ }),\n\n/***/ \"../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-sony-w850c/build/index.js\":\n/*!***********************************************************************************************************************************************************!*\\\n  !*** /Users/lesang/Library/Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-sony-w850c/build/index.js ***!\n  \\***********************************************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nclass DeviceSkin {\\n    constructor() {\\n        this.image = \\\"device.png\\\";\\n        this.imageWidth = 1320;\\n        this.imageHeight = 860;\\n        this.padding = 40;\\n        this.background = \\\"white\\\";\\n    }\\n}\\nexports.DeviceSkin = DeviceSkin;\\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL2xlc2FuZy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvYmNkNDM1MDYtNjU5NC00MjZjLTliZDMtNWVmZGNlMGQzNTE5L25vZGVfbW9kdWxlcy9AZnJhbWVyL2ZyYW1lci5kZXZpY2Utc2tpbi1zb255LXc4NTBjL2J1aWxkL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi8uLi8uLi9DYWNoZXMvRnJhbWVyL3Byb2plY3RzL2JjZDQzNTA2LTY1OTQtNDI2Yy05YmQzLTVlZmRjZTBkMzUxOS9ub2RlX21vZHVsZXMvQGZyYW1lci9mcmFtZXIuZGV2aWNlLXNraW4tc29ueS13ODUwYy9idWlsZC9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY2xhc3MgRGV2aWNlU2tpbiB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaW1hZ2UgPSBcImRldmljZS5wbmdcIjtcbiAgICAgICAgdGhpcy5pbWFnZVdpZHRoID0gMTMyMDtcbiAgICAgICAgdGhpcy5pbWFnZUhlaWdodCA9IDg2MDtcbiAgICAgICAgdGhpcy5wYWRkaW5nID0gNDA7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZCA9IFwid2hpdGVcIjtcbiAgICB9XG59XG5leHBvcnRzLkRldmljZVNraW4gPSBEZXZpY2VTa2luO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-sony-w850c/build/index.js\\n\");\n\n/***/ }),\n\n/***/ \"../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/jurrehoutkamp.twitch-player/build/index.js\":\n/*!*********************************************************************************************************************************************************!*\\\n  !*** /Users/lesang/Library/Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/jurrehoutkamp.twitch-player/build/index.js ***!\n  \\*********************************************************************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(true)\\n\\t\\tmodule.exports = factory(__webpack_require__(/*! framer */ \\\"framer\\\"), __webpack_require__(/*! react */ \\\"react\\\"));\\n\\telse { var i, a; }\\n})(window, function(__WEBPACK_EXTERNAL_MODULE_framer__, __WEBPACK_EXTERNAL_MODULE_react__) {\\nreturn /******/ (function(modules) { // webpackBootstrap\\n/******/ \\t// The module cache\\n/******/ \\tvar installedModules = {};\\n/******/\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tif(installedModules[moduleId]) {\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\n/******/ \\t\\t\\ti: moduleId,\\n/******/ \\t\\t\\tl: false,\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n/******/\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.l = true;\\n/******/\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/\\n/******/\\n/******/ \\t// expose the modules object (__webpack_modules__)\\n/******/ \\t__webpack_require__.m = modules;\\n/******/\\n/******/ \\t// expose the module cache\\n/******/ \\t__webpack_require__.c = installedModules;\\n/******/\\n/******/ \\t// define getter function for harmony exports\\n/******/ \\t__webpack_require__.d = function(exports, name, getter) {\\n/******/ \\t\\tif(!__webpack_require__.o(exports, name)) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, name, {\\n/******/ \\t\\t\\t\\tconfigurable: false,\\n/******/ \\t\\t\\t\\tenumerable: true,\\n/******/ \\t\\t\\t\\tget: getter\\n/******/ \\t\\t\\t});\\n/******/ \\t\\t}\\n/******/ \\t};\\n/******/\\n/******/ \\t// define __esModule on exports\\n/******/ \\t__webpack_require__.r = function(exports) {\\n/******/ \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t};\\n/******/\\n/******/ \\t// getDefaultExport function for compatibility with non-harmony modules\\n/******/ \\t__webpack_require__.n = function(module) {\\n/******/ \\t\\tvar getter = module && module.__esModule ?\\n/******/ \\t\\t\\tfunction getDefault() { return module['default']; } :\\n/******/ \\t\\t\\tfunction getModuleExports() { return module; };\\n/******/ \\t\\t__webpack_require__.d(getter, 'a', getter);\\n/******/ \\t\\treturn getter;\\n/******/ \\t};\\n/******/\\n/******/ \\t// Object.prototype.hasOwnProperty.call\\n/******/ \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n/******/\\n/******/ \\t// __webpack_public_path__\\n/******/ \\t__webpack_require__.p = \\\"\\\";\\n/******/\\n/******/\\n/******/ \\t// Load entry module and return exports\\n/******/ \\treturn __webpack_require__(__webpack_require__.s = \\\"./package.js\\\");\\n/******/ })\\n/************************************************************************/\\n/******/ ({\\n\\n/***/ \\\"./code sync recursive \\\\\\\\.(t|j)s(x?)|\\\\\\\\.css$\\\":\\n/*!***************************************!*\\\\\\n  !*** ./code sync \\\\.(t|j)s(x?)|\\\\.css$ ***!\\n  \\\\***************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\neval(\\\"var map = {\\\\n\\\\t\\\\\\\"./App.tsx\\\\\\\": \\\\\\\"./code/App.tsx\\\\\\\",\\\\n\\\\t\\\\\\\"./Twitch.tsx\\\\\\\": \\\\\\\"./code/Twitch.tsx\\\\\\\",\\\\n\\\\t\\\\\\\"./Twitch_Chat.tsx\\\\\\\": \\\\\\\"./code/Twitch_Chat.tsx\\\\\\\"\\\\n};\\\\n\\\\n\\\\nfunction webpackContext(req) {\\\\n\\\\tvar id = webpackContextResolve(req);\\\\n\\\\tvar module = __webpack_require__(id);\\\\n\\\\treturn module;\\\\n}\\\\nfunction webpackContextResolve(req) {\\\\n\\\\tvar id = map[req];\\\\n\\\\tif(!(id + 1)) { // check for number or string\\\\n\\\\t\\\\tvar e = new Error('Cannot find module \\\\\\\"' + req + '\\\\\\\".');\\\\n\\\\t\\\\te.code = 'MODULE_NOT_FOUND';\\\\n\\\\t\\\\tthrow e;\\\\n\\\\t}\\\\n\\\\treturn id;\\\\n}\\\\nwebpackContext.keys = function webpackContextKeys() {\\\\n\\\\treturn Object.keys(map);\\\\n};\\\\nwebpackContext.resolve = webpackContextResolve;\\\\nmodule.exports = webpackContext;\\\\nwebpackContext.id = \\\\\\\"./code sync recursive \\\\\\\\\\\\\\\\.(t|j)s(x?)|\\\\\\\\\\\\\\\\.css$\\\\\\\";//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlIHN5bmMgXFwuKHR8ailzKHgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vY29kZSBzeW5jIHJlY3Vyc2l2ZSBcXC4odHxqKXMoeD8pfFxcLmNzcyQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWFwID0ge1xuXHRcIi4vQXBwLnRzeFwiOiBcIi4vY29kZS9BcHAudHN4XCIsXG5cdFwiLi9Ud2l0Y2gudHN4XCI6IFwiLi9jb2RlL1R3aXRjaC50c3hcIixcblx0XCIuL1R3aXRjaF9DaGF0LnRzeFwiOiBcIi4vY29kZS9Ud2l0Y2hfQ2hhdC50c3hcIlxufTtcblxuXG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0dmFyIGlkID0gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSk7XG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcblx0cmV0dXJuIG1vZHVsZTtcbn1cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0dmFyIGlkID0gbWFwW3JlcV07XG5cdGlmKCEoaWQgKyAxKSkgeyAvLyBjaGVjayBmb3IgbnVtYmVyIG9yIHN0cmluZ1xuXHRcdHZhciBlID0gbmV3IEVycm9yKCdDYW5ub3QgZmluZCBtb2R1bGUgXCInICsgcmVxICsgJ1wiLicpO1xuXHRcdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0XHR0aHJvdyBlO1xuXHR9XG5cdHJldHVybiBpZDtcbn1cbndlYnBhY2tDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQ29udGV4dEtleXMoKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhtYXApO1xufTtcbndlYnBhY2tDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmU7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tDb250ZXh0O1xud2VicGFja0NvbnRleHQuaWQgPSBcIi4vY29kZSBzeW5jIHJlY3Vyc2l2ZSBcXFxcLih0fGopcyh4Pyl8XFxcXC5jc3MkXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./code sync recursive \\\\\\\\.(t|j)s(x?)|\\\\\\\\.css$\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./code/App.tsx\\\":\\n/*!**********************!*\\\\\\n  !*** ./code/App.tsx ***!\\n  \\\\**********************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nObject.defineProperty(exports, \\\\\\\"__esModule\\\\\\\", { value: true });\\\\nconst framer_1 = __webpack_require__(/*! framer */ \\\\\\\"framer\\\\\\\");\\\\nexports.Bounce = framer_1.PropertyStore({\\\\n    scale: 1,\\\\n    onTap() {\\\\n        window[\\\\\\\"__checkBudget__\\\\\\\"]();\\\\n        framer_1.animate.linear(this.scale, 0.8, 0.2);\\\\n        setTimeout(() => {\\\\n            window[\\\\\\\"__checkBudget__\\\\\\\"]();\\\\n            framer_1.animate.spring(this.scale, 1);\\\\n        }, 250);\\\\n    },\\\\n}, true);\\\\nexports.Animation = framer_1.PropertyStore({\\\\n    opacity: 1,\\\\n    rotation: 0,\\\\n}, true);\\\\nexports.Switch = framer_1.PropertyStore({\\\\n    toggle: true,\\\\n    onTap() {\\\\n        window[\\\\\\\"__checkBudget__\\\\\\\"]();\\\\n        framer_1.animate.spring(exports.Animation, {\\\\n            opacity: this.toggle ? 0.5 : 1,\\\\n            rotation: this.toggle ? 180 : 0,\\\\n        });\\\\n        this.toggle = !this.toggle;\\\\n    },\\\\n});\\\\nexports.__info__ = [];\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0FwcC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0wsQ0FBQztBQUNEIiwiZmlsZSI6Ii4vY29kZS9BcHAudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBmcmFtZXJfMSA9IHJlcXVpcmUoXCJmcmFtZXJcIik7XG5leHBvcnRzLkJvdW5jZSA9IGZyYW1lcl8xLlByb3BlcnR5U3RvcmUoe1xuICAgIHNjYWxlOiAxLFxuICAgIG9uVGFwKCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgZnJhbWVyXzEuYW5pbWF0ZS5saW5lYXIodGhpcy5zY2FsZSwgMC44LCAwLjIpO1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgZnJhbWVyXzEuYW5pbWF0ZS5zcHJpbmcodGhpcy5zY2FsZSwgMSk7XG4gICAgICAgIH0sIDI1MCk7XG4gICAgfSxcbn0sIHRydWUpO1xuZXhwb3J0cy5BbmltYXRpb24gPSBmcmFtZXJfMS5Qcm9wZXJ0eVN0b3JlKHtcbiAgICBvcGFjaXR5OiAxLFxuICAgIHJvdGF0aW9uOiAwLFxufSwgdHJ1ZSk7XG5leHBvcnRzLlN3aXRjaCA9IGZyYW1lcl8xLlByb3BlcnR5U3RvcmUoe1xuICAgIHRvZ2dsZTogdHJ1ZSxcbiAgICBvblRhcCgpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGZyYW1lcl8xLmFuaW1hdGUuc3ByaW5nKGV4cG9ydHMuQW5pbWF0aW9uLCB7XG4gICAgICAgICAgICBvcGFjaXR5OiB0aGlzLnRvZ2dsZSA/IDAuNSA6IDEsXG4gICAgICAgICAgICByb3RhdGlvbjogdGhpcy50b2dnbGUgPyAxODAgOiAwLFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy50b2dnbGUgPSAhdGhpcy50b2dnbGU7XG4gICAgfSxcbn0pO1xuZXhwb3J0cy5fX2luZm9fXyA9IFtdO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./code/App.tsx\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./code/Twitch.tsx\\\":\\n/*!*************************!*\\\\\\n  !*** ./code/Twitch.tsx ***!\\n  \\\\*************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nObject.defineProperty(exports, \\\\\\\"__esModule\\\\\\\", { value: true });\\\\nconst React = __webpack_require__(/*! react */ \\\\\\\"react\\\\\\\");\\\\nconst framer_1 = __webpack_require__(/*! framer */ \\\\\\\"framer\\\\\\\");\\\\nclass Twitch extends React.Component {\\\\n    render() {\\\\n        window[\\\\\\\"__checkBudget__\\\\\\\"]();\\\\n        const identifier = Twitch.guessIdentifier(this.props.url) || \\\\\\\"none\\\\\\\";\\\\n        const width = framer_1.Animatable.getNumber(this.props.width);\\\\n        const height = framer_1.Animatable.getNumber(this.props.height);\\\\n        return (React.createElement(\\\\\\\"iframe\\\\\\\", { width: width, height: height, frameBorder: 0, src: `https://player.twitch.tv/?channel=${identifier}` }));\\\\n    }\\\\n}\\\\nTwitch.defaultProps = {\\\\n    url: \\\\\\\"Food\\\\\\\",\\\\n    width: 460,\\\\n    height: 240\\\\n};\\\\nTwitch.propertyControls = {\\\\n    url: { type: framer_1.ControlType.String, title: \\\\\\\"Channel\\\\\\\" }\\\\n};\\\\nTwitch.guessIdentifier = (urlMaybe) => {\\\\n    window[\\\\\\\"__checkBudget__\\\\\\\"]();\\\\n    if (!urlMaybe)\\\\n        return null;\\\\n    let identifier = \\\\\\\"\\\\\\\";\\\\n    // https://www.youtube.com/watch?v=cAs3senSITIve\\\\n    const watchPrefix = \\\\\\\"https://player.twitch.tv/?channel=\\\\\\\";\\\\n    const watchIndex = urlMaybe.indexOf(watchPrefix);\\\\n    if (watchIndex >= 0) {\\\\n        identifier = urlMaybe.substring(watchIndex + watchPrefix.length);\\\\n    }\\\\n    else {\\\\n        // https://vimeo.com/video/\\\\n        const embedPrefix = \\\\\\\"https://player.twitch.tv/?channel=\\\\\\\";\\\\n        const embedIndex = urlMaybe.indexOf(embedPrefix);\\\\n        if (embedIndex >= 0) {\\\\n            identifier = urlMaybe.substring(embedIndex + embedPrefix.length);\\\\n        }\\\\n        else {\\\\n            // https://player.vimeo.com/video/\\\\n            const shortenedPrefix = \\\\\\\"https://player.twitch.tv/?channel=\\\\\\\";\\\\n            const shortenedIndex = urlMaybe.indexOf(shortenedPrefix);\\\\n            if (shortenedIndex >= 0) {\\\\n                identifier = urlMaybe.substring(shortenedIndex + shortenedPrefix.length);\\\\n            }\\\\n            else {\\\\n                // Everything else\\\\n                identifier = urlMaybe;\\\\n            }\\\\n        }\\\\n    }\\\\n    // Strip off the query string, if any\\\\n    const queryIndex = identifier.indexOf(\\\\\\\"?\\\\\\\");\\\\n    if (queryIndex >= 0) {\\\\n        identifier = identifier.substring(0, queryIndex);\\\\n    }\\\\n    // What's left might be an identifier\\\\n    return identifier.match(/[\\\\\\\\w_]+/) ? identifier : null;\\\\n};\\\\nexports.Twitch = Twitch;\\\\nexports.__info__ = [{ name: \\\\\\\"Twitch\\\\\\\", children: false, type: \\\\\\\"component\\\\\\\" }];\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1R3aXRjaC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLHlGQUF5RixXQUFXLEdBQUc7QUFDdEo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFEQUFxRCIsImZpbGUiOiIuL2NvZGUvVHdpdGNoLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBmcmFtZXJfMSA9IHJlcXVpcmUoXCJmcmFtZXJcIik7XG5jbGFzcyBUd2l0Y2ggZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IGlkZW50aWZpZXIgPSBUd2l0Y2guZ3Vlc3NJZGVudGlmaWVyKHRoaXMucHJvcHMudXJsKSB8fCBcIm5vbmVcIjtcbiAgICAgICAgY29uc3Qgd2lkdGggPSBmcmFtZXJfMS5BbmltYXRhYmxlLmdldE51bWJlcih0aGlzLnByb3BzLndpZHRoKTtcbiAgICAgICAgY29uc3QgaGVpZ2h0ID0gZnJhbWVyXzEuQW5pbWF0YWJsZS5nZXROdW1iZXIodGhpcy5wcm9wcy5oZWlnaHQpO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIiwgeyB3aWR0aDogd2lkdGgsIGhlaWdodDogaGVpZ2h0LCBmcmFtZUJvcmRlcjogMCwgc3JjOiBgaHR0cHM6Ly9wbGF5ZXIudHdpdGNoLnR2Lz9jaGFubmVsPSR7aWRlbnRpZmllcn1gIH0pKTtcbiAgICB9XG59XG5Ud2l0Y2guZGVmYXVsdFByb3BzID0ge1xuICAgIHVybDogXCJGb29kXCIsXG4gICAgd2lkdGg6IDQ2MCxcbiAgICBoZWlnaHQ6IDI0MFxufTtcblR3aXRjaC5wcm9wZXJ0eUNvbnRyb2xzID0ge1xuICAgIHVybDogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5TdHJpbmcsIHRpdGxlOiBcIkNoYW5uZWxcIiB9XG59O1xuVHdpdGNoLmd1ZXNzSWRlbnRpZmllciA9ICh1cmxNYXliZSkgPT4ge1xuICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgIGlmICghdXJsTWF5YmUpXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIGxldCBpZGVudGlmaWVyID0gXCJcIjtcbiAgICAvLyBodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWNBczNzZW5TSVRJdmVcbiAgICBjb25zdCB3YXRjaFByZWZpeCA9IFwiaHR0cHM6Ly9wbGF5ZXIudHdpdGNoLnR2Lz9jaGFubmVsPVwiO1xuICAgIGNvbnN0IHdhdGNoSW5kZXggPSB1cmxNYXliZS5pbmRleE9mKHdhdGNoUHJlZml4KTtcbiAgICBpZiAod2F0Y2hJbmRleCA+PSAwKSB7XG4gICAgICAgIGlkZW50aWZpZXIgPSB1cmxNYXliZS5zdWJzdHJpbmcod2F0Y2hJbmRleCArIHdhdGNoUHJlZml4Lmxlbmd0aCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBodHRwczovL3ZpbWVvLmNvbS92aWRlby9cbiAgICAgICAgY29uc3QgZW1iZWRQcmVmaXggPSBcImh0dHBzOi8vcGxheWVyLnR3aXRjaC50di8/Y2hhbm5lbD1cIjtcbiAgICAgICAgY29uc3QgZW1iZWRJbmRleCA9IHVybE1heWJlLmluZGV4T2YoZW1iZWRQcmVmaXgpO1xuICAgICAgICBpZiAoZW1iZWRJbmRleCA+PSAwKSB7XG4gICAgICAgICAgICBpZGVudGlmaWVyID0gdXJsTWF5YmUuc3Vic3RyaW5nKGVtYmVkSW5kZXggKyBlbWJlZFByZWZpeC5sZW5ndGgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gaHR0cHM6Ly9wbGF5ZXIudmltZW8uY29tL3ZpZGVvL1xuICAgICAgICAgICAgY29uc3Qgc2hvcnRlbmVkUHJlZml4ID0gXCJodHRwczovL3BsYXllci50d2l0Y2gudHYvP2NoYW5uZWw9XCI7XG4gICAgICAgICAgICBjb25zdCBzaG9ydGVuZWRJbmRleCA9IHVybE1heWJlLmluZGV4T2Yoc2hvcnRlbmVkUHJlZml4KTtcbiAgICAgICAgICAgIGlmIChzaG9ydGVuZWRJbmRleCA+PSAwKSB7XG4gICAgICAgICAgICAgICAgaWRlbnRpZmllciA9IHVybE1heWJlLnN1YnN0cmluZyhzaG9ydGVuZWRJbmRleCArIHNob3J0ZW5lZFByZWZpeC5sZW5ndGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gRXZlcnl0aGluZyBlbHNlXG4gICAgICAgICAgICAgICAgaWRlbnRpZmllciA9IHVybE1heWJlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIFN0cmlwIG9mZiB0aGUgcXVlcnkgc3RyaW5nLCBpZiBhbnlcbiAgICBjb25zdCBxdWVyeUluZGV4ID0gaWRlbnRpZmllci5pbmRleE9mKFwiP1wiKTtcbiAgICBpZiAocXVlcnlJbmRleCA+PSAwKSB7XG4gICAgICAgIGlkZW50aWZpZXIgPSBpZGVudGlmaWVyLnN1YnN0cmluZygwLCBxdWVyeUluZGV4KTtcbiAgICB9XG4gICAgLy8gV2hhdCdzIGxlZnQgbWlnaHQgYmUgYW4gaWRlbnRpZmllclxuICAgIHJldHVybiBpZGVudGlmaWVyLm1hdGNoKC9bXFx3X10rLykgPyBpZGVudGlmaWVyIDogbnVsbDtcbn07XG5leHBvcnRzLlR3aXRjaCA9IFR3aXRjaDtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcIlR3aXRjaFwiLCBjaGlsZHJlbjogZmFsc2UsIHR5cGU6IFwiY29tcG9uZW50XCIgfV07XG4iXSwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./code/Twitch.tsx\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./code/Twitch_Chat.tsx\\\":\\n/*!******************************!*\\\\\\n  !*** ./code/Twitch_Chat.tsx ***!\\n  \\\\******************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nObject.defineProperty(exports, \\\\\\\"__esModule\\\\\\\", { value: true });\\\\nconst React = __webpack_require__(/*! react */ \\\\\\\"react\\\\\\\");\\\\nconst framer_1 = __webpack_require__(/*! framer */ \\\\\\\"framer\\\\\\\");\\\\nclass TwitchChat extends React.Component {\\\\n    render() {\\\\n        window[\\\\\\\"__checkBudget__\\\\\\\"]();\\\\n        const identifier = TwitchChat.guessIdentifier(this.props.url) || \\\\\\\"none\\\\\\\";\\\\n        const width = framer_1.Animatable.getNumber(this.props.width);\\\\n        const height = framer_1.Animatable.getNumber(this.props.height);\\\\n        return (React.createElement(\\\\\\\"iframe\\\\\\\", { width: width, height: height, frameBorder: 0, src: `https://www.twitch.tv/embed/${identifier}/chat` }));\\\\n    }\\\\n}\\\\nTwitchChat.defaultProps = {\\\\n    url: \\\\\\\"Food\\\\\\\",\\\\n    width: 330,\\\\n    height: 620\\\\n};\\\\nTwitchChat.propertyControls = {\\\\n    url: { type: framer_1.ControlType.String, title: \\\\\\\"Channel\\\\\\\" }\\\\n};\\\\nTwitchChat.guessIdentifier = (urlMaybe) => {\\\\n    window[\\\\\\\"__checkBudget__\\\\\\\"]();\\\\n    if (!urlMaybe)\\\\n        return null;\\\\n    let identifier = \\\\\\\"\\\\\\\";\\\\n    // https://www.youtube.com/watch?v=cAs3senSITIve\\\\n    const watchPrefix = \\\\\\\"https://player.twitch.tv/?channel=\\\\\\\";\\\\n    const watchIndex = urlMaybe.indexOf(watchPrefix);\\\\n    if (watchIndex >= 0) {\\\\n        identifier = urlMaybe.substring(watchIndex + watchPrefix.length);\\\\n    }\\\\n    else {\\\\n        // https://vimeo.com/video/\\\\n        const embedPrefix = \\\\\\\"https://player.twitch.tv/?channel=\\\\\\\";\\\\n        const embedIndex = urlMaybe.indexOf(embedPrefix);\\\\n        if (embedIndex >= 0) {\\\\n            identifier = urlMaybe.substring(embedIndex + embedPrefix.length);\\\\n        }\\\\n        else {\\\\n            // https://player.vimeo.com/video/\\\\n            const shortenedPrefix = \\\\\\\"https://player.twitch.tv/?channel=\\\\\\\";\\\\n            const shortenedIndex = urlMaybe.indexOf(shortenedPrefix);\\\\n            if (shortenedIndex >= 0) {\\\\n                identifier = urlMaybe.substring(shortenedIndex + shortenedPrefix.length);\\\\n            }\\\\n            else {\\\\n                // Everything else\\\\n                identifier = urlMaybe;\\\\n            }\\\\n        }\\\\n    }\\\\n    // Strip off the query string, if any\\\\n    const queryIndex = identifier.indexOf(\\\\\\\"?\\\\\\\");\\\\n    if (queryIndex >= 0) {\\\\n        identifier = identifier.substring(0, queryIndex);\\\\n    }\\\\n    // What's left might be an identifier\\\\n    return identifier.match(/[\\\\\\\\w_]+/) ? identifier : null;\\\\n};\\\\nexports.TwitchChat = TwitchChat;\\\\nexports.__info__ = [{ name: \\\\\\\"TwitchChat\\\\\\\", children: false, type: \\\\\\\"component\\\\\\\" }];\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1R3aXRjaF9DaGF0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsbUZBQW1GLFdBQVcsUUFBUTtBQUNySjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIseURBQXlEIiwiZmlsZSI6Ii4vY29kZS9Ud2l0Y2hfQ2hhdC50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY2xhc3MgVHdpdGNoQ2hhdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgY29uc3QgaWRlbnRpZmllciA9IFR3aXRjaENoYXQuZ3Vlc3NJZGVudGlmaWVyKHRoaXMucHJvcHMudXJsKSB8fCBcIm5vbmVcIjtcbiAgICAgICAgY29uc3Qgd2lkdGggPSBmcmFtZXJfMS5BbmltYXRhYmxlLmdldE51bWJlcih0aGlzLnByb3BzLndpZHRoKTtcbiAgICAgICAgY29uc3QgaGVpZ2h0ID0gZnJhbWVyXzEuQW5pbWF0YWJsZS5nZXROdW1iZXIodGhpcy5wcm9wcy5oZWlnaHQpO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIiwgeyB3aWR0aDogd2lkdGgsIGhlaWdodDogaGVpZ2h0LCBmcmFtZUJvcmRlcjogMCwgc3JjOiBgaHR0cHM6Ly93d3cudHdpdGNoLnR2L2VtYmVkLyR7aWRlbnRpZmllcn0vY2hhdGAgfSkpO1xuICAgIH1cbn1cblR3aXRjaENoYXQuZGVmYXVsdFByb3BzID0ge1xuICAgIHVybDogXCJGb29kXCIsXG4gICAgd2lkdGg6IDMzMCxcbiAgICBoZWlnaHQ6IDYyMFxufTtcblR3aXRjaENoYXQucHJvcGVydHlDb250cm9scyA9IHtcbiAgICB1cmw6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogXCJDaGFubmVsXCIgfVxufTtcblR3aXRjaENoYXQuZ3Vlc3NJZGVudGlmaWVyID0gKHVybE1heWJlKSA9PiB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgaWYgKCF1cmxNYXliZSlcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgbGV0IGlkZW50aWZpZXIgPSBcIlwiO1xuICAgIC8vIGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9Y0FzM3NlblNJVEl2ZVxuICAgIGNvbnN0IHdhdGNoUHJlZml4ID0gXCJodHRwczovL3BsYXllci50d2l0Y2gudHYvP2NoYW5uZWw9XCI7XG4gICAgY29uc3Qgd2F0Y2hJbmRleCA9IHVybE1heWJlLmluZGV4T2Yod2F0Y2hQcmVmaXgpO1xuICAgIGlmICh3YXRjaEluZGV4ID49IDApIHtcbiAgICAgICAgaWRlbnRpZmllciA9IHVybE1heWJlLnN1YnN0cmluZyh3YXRjaEluZGV4ICsgd2F0Y2hQcmVmaXgubGVuZ3RoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIC8vIGh0dHBzOi8vdmltZW8uY29tL3ZpZGVvL1xuICAgICAgICBjb25zdCBlbWJlZFByZWZpeCA9IFwiaHR0cHM6Ly9wbGF5ZXIudHdpdGNoLnR2Lz9jaGFubmVsPVwiO1xuICAgICAgICBjb25zdCBlbWJlZEluZGV4ID0gdXJsTWF5YmUuaW5kZXhPZihlbWJlZFByZWZpeCk7XG4gICAgICAgIGlmIChlbWJlZEluZGV4ID49IDApIHtcbiAgICAgICAgICAgIGlkZW50aWZpZXIgPSB1cmxNYXliZS5zdWJzdHJpbmcoZW1iZWRJbmRleCArIGVtYmVkUHJlZml4Lmxlbmd0aCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBodHRwczovL3BsYXllci52aW1lby5jb20vdmlkZW8vXG4gICAgICAgICAgICBjb25zdCBzaG9ydGVuZWRQcmVmaXggPSBcImh0dHBzOi8vcGxheWVyLnR3aXRjaC50di8/Y2hhbm5lbD1cIjtcbiAgICAgICAgICAgIGNvbnN0IHNob3J0ZW5lZEluZGV4ID0gdXJsTWF5YmUuaW5kZXhPZihzaG9ydGVuZWRQcmVmaXgpO1xuICAgICAgICAgICAgaWYgKHNob3J0ZW5lZEluZGV4ID49IDApIHtcbiAgICAgICAgICAgICAgICBpZGVudGlmaWVyID0gdXJsTWF5YmUuc3Vic3RyaW5nKHNob3J0ZW5lZEluZGV4ICsgc2hvcnRlbmVkUHJlZml4Lmxlbmd0aCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBFdmVyeXRoaW5nIGVsc2VcbiAgICAgICAgICAgICAgICBpZGVudGlmaWVyID0gdXJsTWF5YmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gU3RyaXAgb2ZmIHRoZSBxdWVyeSBzdHJpbmcsIGlmIGFueVxuICAgIGNvbnN0IHF1ZXJ5SW5kZXggPSBpZGVudGlmaWVyLmluZGV4T2YoXCI/XCIpO1xuICAgIGlmIChxdWVyeUluZGV4ID49IDApIHtcbiAgICAgICAgaWRlbnRpZmllciA9IGlkZW50aWZpZXIuc3Vic3RyaW5nKDAsIHF1ZXJ5SW5kZXgpO1xuICAgIH1cbiAgICAvLyBXaGF0J3MgbGVmdCBtaWdodCBiZSBhbiBpZGVudGlmaWVyXG4gICAgcmV0dXJuIGlkZW50aWZpZXIubWF0Y2goL1tcXHdfXSsvKSA/IGlkZW50aWZpZXIgOiBudWxsO1xufTtcbmV4cG9ydHMuVHdpdGNoQ2hhdCA9IFR3aXRjaENoYXQ7XG5leHBvcnRzLl9faW5mb19fID0gW3sgbmFtZTogXCJUd2l0Y2hDaGF0XCIsIGNoaWxkcmVuOiBmYWxzZSwgdHlwZTogXCJjb21wb25lbnRcIiB9XTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./code/Twitch_Chat.tsx\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./package.js\\\":\\n/*!********************!*\\\\\\n  !*** ./package.js ***!\\n  \\\\********************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\neval(\\\"// The template for the dynamic webpack entry. Be aware of the variables\\\\n\\\\nconst packageJson = __webpack_require__(/*! ./package.json */ \\\\\\\"./package.json\\\\\\\")\\\\n\\\\nconst package = {\\\\n    packageJson,\\\\n    sourceModules: {},\\\\n    dependencies: {},\\\\n}\\\\n\\\\n// This is a special webpack thing that watches the whole directory\\\\n// https://github.com/webpack/docs/wiki/context\\\\nconst ctx = __webpack_require__(\\\\\\\"./code sync recursive \\\\\\\\\\\\\\\\.(t|j)s(x?)|\\\\\\\\\\\\\\\\.css$\\\\\\\")\\\\n\\\\nctx.keys().forEach(key => {\\\\n    package.sourceModules[key] = () => ctx(key)\\\\n})\\\\n\\\\n// The packages are passed in through a template\\\\nconst packages = {}\\\\n\\\\n                packages[\\\\\\\"framer\\\\\\\"] = () => {\\\\n                    var package = {}\\\\n                    try {\\\\n                        package = __webpack_require__(/*! framer */ \\\\\\\"framer\\\\\\\")\\\\n                    } catch (e) {\\\\n                        console.log(e)\\\\n                    }\\\\n                    package.__framer__ = package.__framer__ || {}\\\\n                    package.__framer__.packageJson = {\\\\\\\"name\\\\\\\":\\\\\\\"framer\\\\\\\",\\\\\\\"version\\\\\\\":\\\\\\\"0.7.2\\\\\\\",\\\\\\\"main\\\\\\\":\\\\\\\"build/framer.js\\\\\\\",\\\\\\\"types\\\\\\\":\\\\\\\"build/framer.d.ts\\\\\\\",\\\\\\\"author\\\\\\\":\\\\\\\"Framer\\\\\\\",\\\\\\\"license\\\\\\\":\\\\\\\"MIT\\\\\\\",\\\\\\\"devDependencies\\\\\\\":{\\\\\\\"@types/chalk\\\\\\\":\\\\\\\"^2.2.0\\\\\\\",\\\\\\\"@types/draft-js\\\\\\\":\\\\\\\"0.10.19\\\\\\\",\\\\\\\"@types/enzyme\\\\\\\":\\\\\\\"^3.1.10\\\\\\\",\\\\\\\"@types/hsluv\\\\\\\":\\\\\\\"https://github.com/framer/typed_hsluv#bump\\\\\\\",\\\\\\\"@types/jest\\\\\\\":\\\\\\\"^23.0.0\\\\\\\",\\\\\\\"@types/jest-diff\\\\\\\":\\\\\\\"^20.0.0\\\\\\\",\\\\\\\"@types/node\\\\\\\":\\\\\\\"^9.6.0\\\\\\\",\\\\\\\"@types/react\\\\\\\":\\\\\\\"16.3.12\\\\\\\",\\\\\\\"@types/react-dom\\\\\\\":\\\\\\\"^16.0.5\\\\\\\",\\\\\\\"cache-loader\\\\\\\":\\\\\\\"^1.2.2\\\\\\\",\\\\\\\"chalk\\\\\\\":\\\\\\\"^2.4.1\\\\\\\",\\\\\\\"convert-tsconfig-paths-to-webpack-aliases\\\\\\\":\\\\\\\"^0.9.2\\\\\\\",\\\\\\\"css.escape\\\\\\\":\\\\\\\"^1.5.1\\\\\\\",\\\\\\\"dts-bundle\\\\\\\":\\\\\\\"^0.7.3\\\\\\\",\\\\\\\"enzyme\\\\\\\":\\\\\\\"^3.3.0\\\\\\\",\\\\\\\"enzyme-adapter-react-16\\\\\\\":\\\\\\\"^1.1.1\\\\\\\",\\\\\\\"fork-ts-checker-webpack-plugin\\\\\\\":\\\\\\\"^0.4.1\\\\\\\",\\\\\\\"hoist-non-react-statics\\\\\\\":\\\\\\\"^2.5.0\\\\\\\",\\\\\\\"jest\\\\\\\":\\\\\\\"^23.1.0\\\\\\\",\\\\\\\"jest-diff\\\\\\\":\\\\\\\"^22.0.3\\\\\\\",\\\\\\\"jest-junit\\\\\\\":\\\\\\\"^3.4.1\\\\\\\",\\\\\\\"progress-bar-webpack-plugin\\\\\\\":\\\\\\\"^1.11.0\\\\\\\",\\\\\\\"raf\\\\\\\":\\\\\\\"^3.4.0\\\\\\\",\\\\\\\"react\\\\\\\":\\\\\\\"^16.3.2\\\\\\\",\\\\\\\"react-dev-utils\\\\\\\":\\\\\\\"^5.0.1\\\\\\\",\\\\\\\"react-dom\\\\\\\":\\\\\\\"^16.3.2\\\\\\\",\\\\\\\"ts-jest\\\\\\\":\\\\\\\"^22.4.5\\\\\\\",\\\\\\\"ts-loader\\\\\\\":\\\\\\\"^4.1.0\\\\\\\",\\\\\\\"tslint\\\\\\\":\\\\\\\"^5.10.0\\\\\\\",\\\\\\\"tslint-microsoft-contrib\\\\\\\":\\\\\\\"^5.0.3\\\\\\\",\\\\\\\"typescript\\\\\\\":\\\\\\\"^2.8.3\\\\\\\",\\\\\\\"watch\\\\\\\":\\\\\\\"^1.0.2\\\\\\\",\\\\\\\"webpack\\\\\\\":\\\\\\\"^4.4.1\\\\\\\",\\\\\\\"webpack-cli\\\\\\\":\\\\\\\"^2.0.13\\\\\\\",\\\\\\\"webpack-dev-server\\\\\\\":\\\\\\\"^3.1.4\\\\\\\",\\\\\\\"xcssmatrix\\\\\\\":\\\\\\\"^0.2.2\\\\\\\"},\\\\\\\"peerDependencies\\\\\\\":{\\\\\\\"react\\\\\\\":\\\\\\\"^16.3.2\\\\\\\",\\\\\\\"react-dom\\\\\\\":\\\\\\\"^16.3.2\\\\\\\"},\\\\\\\"dependencies\\\\\\\":{\\\\\\\"draft-js\\\\\\\":\\\\\\\"0.10.4\\\\\\\",\\\\\\\"eventemitter3\\\\\\\":\\\\\\\"^3.1.0\\\\\\\",\\\\\\\"hsluv\\\\\\\":\\\\\\\"^0.0.3\\\\\\\",\\\\\\\"immutable\\\\\\\":\\\\\\\"^3.8.2\\\\\\\"},\\\\\\\"framer\\\\\\\":{\\\\\\\"components\\\\\\\":[{\\\\\\\"name\\\\\\\":\\\\\\\"Scroll\\\\\\\",\\\\\\\"children\\\\\\\":true,\\\\\\\"properties\\\\\\\":[{\\\\\\\"key\\\\\\\":\\\\\\\"direction\\\\\\\",\\\\\\\"title\\\\\\\":\\\\\\\"Direction\\\\\\\",\\\\\\\"kind\\\\\\\":\\\\\\\"enum\\\\\\\",\\\\\\\"options\\\\\\\":[\\\\\\\"horizontal\\\\\\\",\\\\\\\"vertical\\\\\\\",\\\\\\\"both\\\\\\\"]}]},{\\\\\\\"name\\\\\\\":\\\\\\\"Page\\\\\\\",\\\\\\\"children\\\\\\\":true},{\\\\\\\"name\\\\\\\":\\\\\\\"Stack\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleWatch38\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleWatch42\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerSonySmartWatch\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPhoneSE\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPhone8\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPhone8Plus\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPhoneX\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerGoogleNexus4\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerGoogleNexus5X\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerGoogleNexus6\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerGooglePixel2\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerGooglePixel2XL\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerHTCOneA9\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerMicrosoftLumia950\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerSamsungNote5\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerSamsungGalaxyS8\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPadAir\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPadMini\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIPadPro\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerGoogleNexusTablet\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerMicrosoftSurfacePro3\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerMicrosoftSurfacePro4\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleIMac\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleThunderboltDisplay\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleMacBook\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleMacBookAir\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerAppleMacBookPro\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerDellXPS\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerMicrosoftSurfaceBook\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"},{\\\\\\\"name\\\\\\\":\\\\\\\"FramerSonyW850C\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"device\\\\\\\"}]},\\\\\\\"scripts\\\\\\\":{\\\\\\\"coverage\\\\\\\":\\\\\\\"jest --config jest.json --coverage\\\\\\\",\\\\\\\"test\\\\\\\":\\\\\\\"jest --config jest.json\\\\\\\",\\\\\\\"watch\\\\\\\":\\\\\\\"jest --config jest.json --watch\\\\\\\"}}\\\\n                    return package\\\\n                }\\\\n\\\\npackage.dependencies = packages\\\\n\\\\nexports.__framer__ = package\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsb0JBQW9CO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCw0SUFBNEkscTdCQUFxN0IscUJBQXFCLHdDQUF3QyxpQkFBaUIsbUZBQW1GLFdBQVcsZUFBZSwrQ0FBK0MsK0ZBQStGLEVBQUUsRUFBRSw4QkFBOEIsRUFBRSxlQUFlLEVBQUUsNENBQTRDLEVBQUUsNENBQTRDLEVBQUUsOENBQThDLEVBQUUsNkNBQTZDLEVBQUUsNENBQTRDLEVBQUUsZ0RBQWdELEVBQUUsNENBQTRDLEVBQUUsNENBQTRDLEVBQUUsNkNBQTZDLEVBQUUsNENBQTRDLEVBQUUsNENBQTRDLEVBQUUsOENBQThDLEVBQUUsd0NBQXdDLEVBQUUsaURBQWlELEVBQUUsNENBQTRDLEVBQUUsK0NBQStDLEVBQUUsNENBQTRDLEVBQUUsNkNBQTZDLEVBQUUsNENBQTRDLEVBQUUsaURBQWlELEVBQUUsb0RBQW9ELEVBQUUsb0RBQW9ELEVBQUUseUNBQXlDLEVBQUUsdURBQXVELEVBQUUsNENBQTRDLEVBQUUsK0NBQStDLEVBQUUsK0NBQStDLEVBQUUsdUNBQXVDLEVBQUUsb0RBQW9ELEVBQUUseUNBQXlDLEVBQUUsWUFBWTtBQUN2NUY7QUFDQTs7QUFFQTs7QUFFQSIsImZpbGUiOiIuL3BhY2thZ2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgdGVtcGxhdGUgZm9yIHRoZSBkeW5hbWljIHdlYnBhY2sgZW50cnkuIEJlIGF3YXJlIG9mIHRoZSB2YXJpYWJsZXNcblxuY29uc3QgcGFja2FnZUpzb24gPSByZXF1aXJlKFwiLi9wYWNrYWdlLmpzb25cIilcblxuY29uc3QgcGFja2FnZSA9IHtcbiAgICBwYWNrYWdlSnNvbixcbiAgICBzb3VyY2VNb2R1bGVzOiB7fSxcbiAgICBkZXBlbmRlbmNpZXM6IHt9LFxufVxuXG4vLyBUaGlzIGlzIGEgc3BlY2lhbCB3ZWJwYWNrIHRoaW5nIHRoYXQgd2F0Y2hlcyB0aGUgd2hvbGUgZGlyZWN0b3J5XG4vLyBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay9kb2NzL3dpa2kvY29udGV4dFxuY29uc3QgY3R4ID0gcmVxdWlyZS5jb250ZXh0KFwiLi9jb2RlXCIsIHRydWUsIC9cXC4odHxqKXMoeD8pfFxcLmNzcyQvKVxuXG5jdHgua2V5cygpLmZvckVhY2goa2V5ID0+IHtcbiAgICBwYWNrYWdlLnNvdXJjZU1vZHVsZXNba2V5XSA9ICgpID0+IGN0eChrZXkpXG59KVxuXG4vLyBUaGUgcGFja2FnZXMgYXJlIHBhc3NlZCBpbiB0aHJvdWdoIGEgdGVtcGxhdGVcbmNvbnN0IHBhY2thZ2VzID0ge31cblxuICAgICAgICAgICAgICAgIHBhY2thZ2VzW1wiZnJhbWVyXCJdID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFja2FnZSA9IHt9XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWNrYWdlID0gcmVxdWlyZShcImZyYW1lclwiKVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHBhY2thZ2UuX19mcmFtZXJfXyA9IHBhY2thZ2UuX19mcmFtZXJfXyB8fCB7fVxuICAgICAgICAgICAgICAgICAgICBwYWNrYWdlLl9fZnJhbWVyX18ucGFja2FnZUpzb24gPSB7XCJuYW1lXCI6XCJmcmFtZXJcIixcInZlcnNpb25cIjpcIjAuNy4yXCIsXCJtYWluXCI6XCJidWlsZC9mcmFtZXIuanNcIixcInR5cGVzXCI6XCJidWlsZC9mcmFtZXIuZC50c1wiLFwiYXV0aG9yXCI6XCJGcmFtZXJcIixcImxpY2Vuc2VcIjpcIk1JVFwiLFwiZGV2RGVwZW5kZW5jaWVzXCI6e1wiQHR5cGVzL2NoYWxrXCI6XCJeMi4yLjBcIixcIkB0eXBlcy9kcmFmdC1qc1wiOlwiMC4xMC4xOVwiLFwiQHR5cGVzL2VuenltZVwiOlwiXjMuMS4xMFwiLFwiQHR5cGVzL2hzbHV2XCI6XCJodHRwczovL2dpdGh1Yi5jb20vZnJhbWVyL3R5cGVkX2hzbHV2I2J1bXBcIixcIkB0eXBlcy9qZXN0XCI6XCJeMjMuMC4wXCIsXCJAdHlwZXMvamVzdC1kaWZmXCI6XCJeMjAuMC4wXCIsXCJAdHlwZXMvbm9kZVwiOlwiXjkuNi4wXCIsXCJAdHlwZXMvcmVhY3RcIjpcIjE2LjMuMTJcIixcIkB0eXBlcy9yZWFjdC1kb21cIjpcIl4xNi4wLjVcIixcImNhY2hlLWxvYWRlclwiOlwiXjEuMi4yXCIsXCJjaGFsa1wiOlwiXjIuNC4xXCIsXCJjb252ZXJ0LXRzY29uZmlnLXBhdGhzLXRvLXdlYnBhY2stYWxpYXNlc1wiOlwiXjAuOS4yXCIsXCJjc3MuZXNjYXBlXCI6XCJeMS41LjFcIixcImR0cy1idW5kbGVcIjpcIl4wLjcuM1wiLFwiZW56eW1lXCI6XCJeMy4zLjBcIixcImVuenltZS1hZGFwdGVyLXJlYWN0LTE2XCI6XCJeMS4xLjFcIixcImZvcmstdHMtY2hlY2tlci13ZWJwYWNrLXBsdWdpblwiOlwiXjAuNC4xXCIsXCJob2lzdC1ub24tcmVhY3Qtc3RhdGljc1wiOlwiXjIuNS4wXCIsXCJqZXN0XCI6XCJeMjMuMS4wXCIsXCJqZXN0LWRpZmZcIjpcIl4yMi4wLjNcIixcImplc3QtanVuaXRcIjpcIl4zLjQuMVwiLFwicHJvZ3Jlc3MtYmFyLXdlYnBhY2stcGx1Z2luXCI6XCJeMS4xMS4wXCIsXCJyYWZcIjpcIl4zLjQuMFwiLFwicmVhY3RcIjpcIl4xNi4zLjJcIixcInJlYWN0LWRldi11dGlsc1wiOlwiXjUuMC4xXCIsXCJyZWFjdC1kb21cIjpcIl4xNi4zLjJcIixcInRzLWplc3RcIjpcIl4yMi40LjVcIixcInRzLWxvYWRlclwiOlwiXjQuMS4wXCIsXCJ0c2xpbnRcIjpcIl41LjEwLjBcIixcInRzbGludC1taWNyb3NvZnQtY29udHJpYlwiOlwiXjUuMC4zXCIsXCJ0eXBlc2NyaXB0XCI6XCJeMi44LjNcIixcIndhdGNoXCI6XCJeMS4wLjJcIixcIndlYnBhY2tcIjpcIl40LjQuMVwiLFwid2VicGFjay1jbGlcIjpcIl4yLjAuMTNcIixcIndlYnBhY2stZGV2LXNlcnZlclwiOlwiXjMuMS40XCIsXCJ4Y3NzbWF0cml4XCI6XCJeMC4yLjJcIn0sXCJwZWVyRGVwZW5kZW5jaWVzXCI6e1wicmVhY3RcIjpcIl4xNi4zLjJcIixcInJlYWN0LWRvbVwiOlwiXjE2LjMuMlwifSxcImRlcGVuZGVuY2llc1wiOntcImRyYWZ0LWpzXCI6XCIwLjEwLjRcIixcImV2ZW50ZW1pdHRlcjNcIjpcIl4zLjEuMFwiLFwiaHNsdXZcIjpcIl4wLjAuM1wiLFwiaW1tdXRhYmxlXCI6XCJeMy44LjJcIn0sXCJmcmFtZXJcIjp7XCJjb21wb25lbnRzXCI6W3tcIm5hbWVcIjpcIlNjcm9sbFwiLFwiY2hpbGRyZW5cIjp0cnVlLFwicHJvcGVydGllc1wiOlt7XCJrZXlcIjpcImRpcmVjdGlvblwiLFwidGl0bGVcIjpcIkRpcmVjdGlvblwiLFwia2luZFwiOlwiZW51bVwiLFwib3B0aW9uc1wiOltcImhvcml6b250YWxcIixcInZlcnRpY2FsXCIsXCJib3RoXCJdfV19LHtcIm5hbWVcIjpcIlBhZ2VcIixcImNoaWxkcmVuXCI6dHJ1ZX0se1wibmFtZVwiOlwiU3RhY2tcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVXYXRjaDM4XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVXYXRjaDQyXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyU29ueVNtYXJ0V2F0Y2hcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZUlQaG9uZVNFXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJUGhvbmU4XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJUGhvbmU4UGx1c1wiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckFwcGxlSVBob25lWFwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckdvb2dsZU5leHVzNFwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckdvb2dsZU5leHVzNVhcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJHb29nbGVOZXh1czZcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJHb29nbGVQaXhlbDJcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJHb29nbGVQaXhlbDJYTFwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckhUQ09uZUE5XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyTWljcm9zb2Z0THVtaWE5NTBcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJTYW1zdW5nTm90ZTVcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJTYW1zdW5nR2FsYXh5UzhcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZUlQYWRBaXJcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZUlQYWRNaW5pXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJUGFkUHJvXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyR29vZ2xlTmV4dXNUYWJsZXRcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJNaWNyb3NvZnRTdXJmYWNlUHJvM1wiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lck1pY3Jvc29mdFN1cmZhY2VQcm80XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJTWFjXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVUaHVuZGVyYm9sdERpc3BsYXlcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZU1hY0Jvb2tcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZU1hY0Jvb2tBaXJcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZU1hY0Jvb2tQcm9cIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJEZWxsWFBTXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyTWljcm9zb2Z0U3VyZmFjZUJvb2tcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJTb255Vzg1MENcIixcInR5cGVcIjpcImRldmljZVwifV19LFwic2NyaXB0c1wiOntcImNvdmVyYWdlXCI6XCJqZXN0IC0tY29uZmlnIGplc3QuanNvbiAtLWNvdmVyYWdlXCIsXCJ0ZXN0XCI6XCJqZXN0IC0tY29uZmlnIGplc3QuanNvblwiLFwid2F0Y2hcIjpcImplc3QgLS1jb25maWcgamVzdC5qc29uIC0td2F0Y2hcIn19XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwYWNrYWdlXG4gICAgICAgICAgICAgICAgfVxuXG5wYWNrYWdlLmRlcGVuZGVuY2llcyA9IHBhY2thZ2VzXG5cbmV4cG9ydHMuX19mcmFtZXJfXyA9IHBhY2thZ2VcbiJdLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./package.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./package.json\\\":\\n/*!**********************!*\\\\\\n  !*** ./package.json ***!\\n  \\\\**********************/\\n/*! exports provided: main, name, version, devDependencies, peerDependencies, framer, author, license, keywords, default */\\n/***/ (function(module) {\\n\\neval(\\\"module.exports = {\\\\\\\"main\\\\\\\":\\\\\\\"build/index.js\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"@framer/jurrehoutkamp.twitch-player\\\\\\\",\\\\\\\"version\\\\\\\":\\\\\\\"1.0.0\\\\\\\",\\\\\\\"devDependencies\\\\\\\":{\\\\\\\"@types/react\\\\\\\":\\\\\\\"^16.0.31\\\\\\\",\\\\\\\"framer\\\\\\\":\\\\\\\"^0.7.2\\\\\\\"},\\\\\\\"peerDependencies\\\\\\\":{\\\\\\\"framer\\\\\\\":\\\\\\\"^0.7.2\\\\\\\",\\\\\\\"react\\\\\\\":\\\\\\\"^16.3.0\\\\\\\",\\\\\\\"react-dom\\\\\\\":\\\\\\\"^16.3.0\\\\\\\"},\\\\\\\"framer\\\\\\\":{\\\\\\\"id\\\\\\\":\\\\\\\"830adc6a-7c97-4d53-80f5-45e22a749666\\\\\\\",\\\\\\\"displayName\\\\\\\":\\\\\\\"Twitch Player\\\\\\\"},\\\\\\\"author\\\\\\\":\\\\\\\"Jurre Houtkamp\\\\\\\",\\\\\\\"license\\\\\\\":\\\\\\\"MIT\\\\\\\",\\\\\\\"keywords\\\\\\\":[\\\\\\\"player\\\\\\\"]};//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL3BhY2thZ2UuanNvbi5qcyIsInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./package.json\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"framer\\\":\\n/*!******************************************************************************************!*\\\\\\n  !*** external {\\\"root\\\":\\\"Framer\\\",\\\"commonjs2\\\":\\\"framer\\\",\\\"commonjs\\\":\\\"framer\\\",\\\"amd\\\":\\\"framer\\\"} ***!\\n  \\\\******************************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\neval(\\\"module.exports = __WEBPACK_EXTERNAL_MODULE_framer__;//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiRnJhbWVyXCIsXCJjb21tb25qczJcIjpcImZyYW1lclwiLFwiY29tbW9uanNcIjpcImZyYW1lclwiLFwiYW1kXCI6XCJmcmFtZXJcIn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiZnJhbWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2ZyYW1lcl9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///framer\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"react\\\":\\n/*!**************************************************************************************!*\\\\\\n  !*** external {\\\"root\\\":\\\"React\\\",\\\"commonjs2\\\":\\\"react\\\",\\\"commonjs\\\":\\\"react\\\",\\\"amd\\\":\\\"react\\\"} ***!\\n  \\\\**************************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\neval(\\\"module.exports = __WEBPACK_EXTERNAL_MODULE_react__;//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJyZWFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9yZWFjdF9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///react\\\\n\\\");\\n\\n/***/ })\\n\\n/******/ });\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/jurrehoutkamp.twitch-player/build/index.js\\n\");\n\n/***/ }),\n\n/***/ \"./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\":\n/*!***************************************!*\\\n  !*** ./code sync \\.(t|j)s(x?)|\\.css$ ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var map = {\\n\\t\\\"./App.ts\\\": \\\"./code/App.ts\\\",\\n\\t\\\"./App1.ts\\\": \\\"./code/App1.ts\\\",\\n\\t\\\"./Examples.ts\\\": \\\"./code/Examples.ts\\\",\\n\\t\\\"./TwitchPlayer.tsx\\\": \\\"./code/TwitchPlayer.tsx\\\",\\n\\t\\\"./Twitch_Player.tsx\\\": \\\"./code/Twitch_Player.tsx\\\",\\n\\t\\\"./canvas.tsx\\\": \\\"./code/canvas.tsx\\\"\\n};\\n\\n\\nfunction webpackContext(req) {\\n\\tvar id = webpackContextResolve(req);\\n\\tvar module = __webpack_require__(id);\\n\\treturn module;\\n}\\nfunction webpackContextResolve(req) {\\n\\tvar id = map[req];\\n\\tif(!(id + 1)) { // check for number or string\\n\\t\\tvar e = new Error('Cannot find module \\\"' + req + '\\\".');\\n\\t\\te.code = 'MODULE_NOT_FOUND';\\n\\t\\tthrow e;\\n\\t}\\n\\treturn id;\\n}\\nwebpackContext.keys = function webpackContextKeys() {\\n\\treturn Object.keys(map);\\n};\\nwebpackContext.resolve = webpackContextResolve;\\nmodule.exports = webpackContext;\\nwebpackContext.id = \\\"./code sync recursive \\\\\\\\.(t|j)s(x?)|\\\\\\\\.css$\\\";//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlIHN5bmMgXFwuKHR8ailzKHgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vY29kZSBzeW5jIHJlY3Vyc2l2ZSBcXC4odHxqKXMoeD8pfFxcLmNzcyQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWFwID0ge1xuXHRcIi4vQXBwLnRzXCI6IFwiLi9jb2RlL0FwcC50c1wiLFxuXHRcIi4vQXBwMS50c1wiOiBcIi4vY29kZS9BcHAxLnRzXCIsXG5cdFwiLi9FeGFtcGxlcy50c1wiOiBcIi4vY29kZS9FeGFtcGxlcy50c1wiLFxuXHRcIi4vVHdpdGNoUGxheWVyLnRzeFwiOiBcIi4vY29kZS9Ud2l0Y2hQbGF5ZXIudHN4XCIsXG5cdFwiLi9Ud2l0Y2hfUGxheWVyLnRzeFwiOiBcIi4vY29kZS9Ud2l0Y2hfUGxheWVyLnRzeFwiLFxuXHRcIi4vY2FudmFzLnRzeFwiOiBcIi4vY29kZS9jYW52YXMudHN4XCJcbn07XG5cblxuZnVuY3Rpb24gd2VicGFja0NvbnRleHQocmVxKSB7XG5cdHZhciBpZCA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpO1xuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXyhpZCk7XG5cdHJldHVybiBtb2R1bGU7XG59XG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKSB7XG5cdHZhciBpZCA9IG1hcFtyZXFdO1xuXHRpZighKGlkICsgMSkpIHsgLy8gY2hlY2sgZm9yIG51bWJlciBvciBzdHJpbmdcblx0XHR2YXIgZSA9IG5ldyBFcnJvcignQ2Fubm90IGZpbmQgbW9kdWxlIFwiJyArIHJlcSArICdcIi4nKTtcblx0XHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdFx0dGhyb3cgZTtcblx0fVxuXHRyZXR1cm4gaWQ7XG59XG53ZWJwYWNrQ29udGV4dC5rZXlzID0gZnVuY3Rpb24gd2VicGFja0NvbnRleHRLZXlzKCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXMobWFwKTtcbn07XG53ZWJwYWNrQ29udGV4dC5yZXNvbHZlID0gd2VicGFja0NvbnRleHRSZXNvbHZlO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQ29udGV4dDtcbndlYnBhY2tDb250ZXh0LmlkID0gXCIuL2NvZGUgc3luYyByZWN1cnNpdmUgXFxcXC4odHxqKXMoeD8pfFxcXFwuY3NzJFwiOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\\n\");\n\n/***/ }),\n\n/***/ \"./code/App.ts\":\n/*!*********************!*\\\n  !*** ./code/App.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nconst data = framer_1.Data({\\n    background: \\\"https://clips-media-assets2.twitch.tv/226318388.mp4\\\"\\n});\\nexports.addVideo = () => {\\n    window[\\\"__checkBudget__\\\"]();\\n    return {\\n        video: data.background,\\n    };\\n};\\nexports.__info__ = [{ name: \\\"addVideo\\\", type: \\\"override\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0FwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIscUNBQXFDIiwiZmlsZSI6Ii4vY29kZS9BcHAudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGZyYW1lcl8xID0gcmVxdWlyZShcImZyYW1lclwiKTtcbmNvbnN0IGRhdGEgPSBmcmFtZXJfMS5EYXRhKHtcbiAgICBiYWNrZ3JvdW5kOiBcImh0dHBzOi8vY2xpcHMtbWVkaWEtYXNzZXRzMi50d2l0Y2gudHYvMjI2MzE4Mzg4Lm1wNFwiXG59KTtcbmV4cG9ydHMuYWRkVmlkZW8gPSAoKSA9PiB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdmlkZW86IGRhdGEuYmFja2dyb3VuZCxcbiAgICB9O1xufTtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcImFkZFZpZGVvXCIsIHR5cGU6IFwib3ZlcnJpZGVcIiB9XTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./code/App.ts\\n\");\n\n/***/ }),\n\n/***/ \"./code/App1.ts\":\n/*!**********************!*\\\n  !*** ./code/App1.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nconst data = framer_1.Data({ scale: framer_1.Animatable(1) });\\nexports.Scale = () => {\\n    window[\\\"__checkBudget__\\\"]();\\n    return {\\n        scale: data.scale,\\n        onTap() {\\n            window[\\\"__checkBudget__\\\"]();\\n            data.scale.set(0.6);\\n            framer_1.animate.spring(data.scale, 1);\\n        },\\n    };\\n};\\nexports.__info__ = [{ name: \\\"Scale\\\", type: \\\"override\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0FwcDEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBLDRCQUE0QixnQ0FBZ0M7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EscUJBQXFCLGtDQUFrQyIsImZpbGUiOiIuL2NvZGUvQXBwMS50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY29uc3QgZGF0YSA9IGZyYW1lcl8xLkRhdGEoeyBzY2FsZTogZnJhbWVyXzEuQW5pbWF0YWJsZSgxKSB9KTtcbmV4cG9ydHMuU2NhbGUgPSAoKSA9PiB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2NhbGU6IGRhdGEuc2NhbGUsXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBkYXRhLnNjYWxlLnNldCgwLjYpO1xuICAgICAgICAgICAgZnJhbWVyXzEuYW5pbWF0ZS5zcHJpbmcoZGF0YS5zY2FsZSwgMSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLl9faW5mb19fID0gW3sgbmFtZTogXCJTY2FsZVwiLCB0eXBlOiBcIm92ZXJyaWRlXCIgfV07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./code/App1.ts\\n\");\n\n/***/ }),\n\n/***/ \"./code/Examples.ts\":\n/*!**************************!*\\\n  !*** ./code/Examples.ts ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nconst data = framer_1.Data({ toggle: true, scale: framer_1.Animatable(1), opacity: framer_1.Animatable(1), rotation: framer_1.Animatable(0) });\\nexports.Scale = () => {\\n    window[\\\"__checkBudget__\\\"]();\\n    return {\\n        scale: data.scale,\\n        onTap() {\\n            window[\\\"__checkBudget__\\\"]();\\n            data.scale.set(0.6);\\n            framer_1.animate.spring(data.scale, 1);\\n        },\\n    };\\n};\\nexports.Rotate = props => {\\n    window[\\\"__checkBudget__\\\"]();\\n    data.rotation.set(props.rotation);\\n    return {\\n        rotation: data.rotation,\\n        onTap() {\\n            window[\\\"__checkBudget__\\\"]();\\n            framer_1.animate.spring(data.rotation, data.rotation.get() + 90, {\\n                tension: 250,\\n                friction: 20,\\n            });\\n        },\\n    };\\n};\\nexports.Fade = props => {\\n    window[\\\"__checkBudget__\\\"]();\\n    data.opacity.set(props.opacity);\\n    return {\\n        opacity: data.opacity,\\n        onTap() {\\n            window[\\\"__checkBudget__\\\"]();\\n            framer_1.animate.linear(data.opacity, 0, 0.2);\\n        },\\n    };\\n};\\nexports.SwitchOutput = () => {\\n    window[\\\"__checkBudget__\\\"]();\\n    return {\\n        opacity: data.opacity,\\n        rotation: data.rotation,\\n    };\\n};\\nexports.SwitchInput = () => {\\n    window[\\\"__checkBudget__\\\"]();\\n    return {\\n        onTap() {\\n            window[\\\"__checkBudget__\\\"]();\\n            const toggle = data.toggle;\\n            framer_1.animate.spring({ opacity: data.opacity, rotation: data.rotation }, {\\n                opacity: toggle ? 0.5 : 1,\\n                rotation: toggle ? 360 : 0,\\n            }, { tension: 200, friction: 20 });\\n            data.toggle = !toggle;\\n        },\\n    };\\n};\\nexports.__info__ = [{ name: \\\"Scale\\\", type: \\\"override\\\" }, { name: \\\"Rotate\\\", type: \\\"override\\\" }, { name: \\\"Fade\\\", type: \\\"override\\\" }, { name: \\\"SwitchOutput\\\", type: \\\"override\\\" }, { name: \\\"SwitchInput\\\", type: \\\"override\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0V4YW1wbGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSw0QkFBNEIsaUhBQWlIO0FBQzdJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsaURBQWlEO0FBQ3RGO0FBQ0E7QUFDQSxhQUFhLEdBQUcsNkJBQTZCO0FBQzdDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQkFBcUIsa0NBQWtDLEdBQUcsbUNBQW1DLEdBQUcsaUNBQWlDLEdBQUcseUNBQXlDLEdBQUcsd0NBQXdDIiwiZmlsZSI6Ii4vY29kZS9FeGFtcGxlcy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY29uc3QgZGF0YSA9IGZyYW1lcl8xLkRhdGEoeyB0b2dnbGU6IHRydWUsIHNjYWxlOiBmcmFtZXJfMS5BbmltYXRhYmxlKDEpLCBvcGFjaXR5OiBmcmFtZXJfMS5BbmltYXRhYmxlKDEpLCByb3RhdGlvbjogZnJhbWVyXzEuQW5pbWF0YWJsZSgwKSB9KTtcbmV4cG9ydHMuU2NhbGUgPSAoKSA9PiB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2NhbGU6IGRhdGEuc2NhbGUsXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBkYXRhLnNjYWxlLnNldCgwLjYpO1xuICAgICAgICAgICAgZnJhbWVyXzEuYW5pbWF0ZS5zcHJpbmcoZGF0YS5zY2FsZSwgMSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLlJvdGF0ZSA9IHByb3BzID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICBkYXRhLnJvdGF0aW9uLnNldChwcm9wcy5yb3RhdGlvbik7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcm90YXRpb246IGRhdGEucm90YXRpb24sXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBmcmFtZXJfMS5hbmltYXRlLnNwcmluZyhkYXRhLnJvdGF0aW9uLCBkYXRhLnJvdGF0aW9uLmdldCgpICsgOTAsIHtcbiAgICAgICAgICAgICAgICB0ZW5zaW9uOiAyNTAsXG4gICAgICAgICAgICAgICAgZnJpY3Rpb246IDIwLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLkZhZGUgPSBwcm9wcyA9PiB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgZGF0YS5vcGFjaXR5LnNldChwcm9wcy5vcGFjaXR5KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvcGFjaXR5OiBkYXRhLm9wYWNpdHksXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBmcmFtZXJfMS5hbmltYXRlLmxpbmVhcihkYXRhLm9wYWNpdHksIDAsIDAuMik7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLlN3aXRjaE91dHB1dCA9ICgpID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvcGFjaXR5OiBkYXRhLm9wYWNpdHksXG4gICAgICAgIHJvdGF0aW9uOiBkYXRhLnJvdGF0aW9uLFxuICAgIH07XG59O1xuZXhwb3J0cy5Td2l0Y2hJbnB1dCA9ICgpID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvblRhcCgpIHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgY29uc3QgdG9nZ2xlID0gZGF0YS50b2dnbGU7XG4gICAgICAgICAgICBmcmFtZXJfMS5hbmltYXRlLnNwcmluZyh7IG9wYWNpdHk6IGRhdGEub3BhY2l0eSwgcm90YXRpb246IGRhdGEucm90YXRpb24gfSwge1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IHRvZ2dsZSA/IDAuNSA6IDEsXG4gICAgICAgICAgICAgICAgcm90YXRpb246IHRvZ2dsZSA/IDM2MCA6IDAsXG4gICAgICAgICAgICB9LCB7IHRlbnNpb246IDIwMCwgZnJpY3Rpb246IDIwIH0pO1xuICAgICAgICAgICAgZGF0YS50b2dnbGUgPSAhdG9nZ2xlO1xuICAgICAgICB9LFxuICAgIH07XG59O1xuZXhwb3J0cy5fX2luZm9fXyA9IFt7IG5hbWU6IFwiU2NhbGVcIiwgdHlwZTogXCJvdmVycmlkZVwiIH0sIHsgbmFtZTogXCJSb3RhdGVcIiwgdHlwZTogXCJvdmVycmlkZVwiIH0sIHsgbmFtZTogXCJGYWRlXCIsIHR5cGU6IFwib3ZlcnJpZGVcIiB9LCB7IG5hbWU6IFwiU3dpdGNoT3V0cHV0XCIsIHR5cGU6IFwib3ZlcnJpZGVcIiB9LCB7IG5hbWU6IFwiU3dpdGNoSW5wdXRcIiwgdHlwZTogXCJvdmVycmlkZVwiIH1dO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./code/Examples.ts\\n\");\n\n/***/ }),\n\n/***/ \"./code/TwitchPlayer.tsx\":\n/*!*******************************!*\\\n  !*** ./code/TwitchPlayer.tsx ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\n// Define type of property\\nconst style = {\\n    height: \\\"100%\\\",\\n    display: \\\"flex\\\",\\n    alignItems: \\\"center\\\",\\n    justifyContent: \\\"center\\\",\\n    textAlign: \\\"center\\\",\\n    color: \\\"#8855FF\\\",\\n    background: \\\"rgba(136, 85, 255, 0.1)\\\",\\n    overflow: \\\"hidden\\\",\\n};\\nconst iframeStyle = {\\n    height: \\\"100%\\\",\\n    width: \\\"100%\\\",\\n    border: \\\"none\\\",\\n};\\nclass TwitchPlayer extends React.Component {\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        let iframeSrc = `https://embed.twitch.tv/?channel=${this.props.channel}&theme=${this.props.theme}&layout=${this.props.layout}`;\\n        if (this.props.layout == \\\"both\\\") {\\n            iframeSrc = `https://embed.twitch.tv/?channel=${this.props.channel}&theme=${this.props.theme}`;\\n        }\\n        else if (this.props.layout == \\\"chat\\\") {\\n            if (this.props.theme == \\\"dark\\\") {\\n                iframeSrc = `https://www.twitch.tv/embed/${this.props.channel}/chat?darkpopout`;\\n            }\\n            else {\\n                iframeSrc = `https://www.twitch.tv/embed/${this.props.channel}/chat`;\\n            }\\n        }\\n        return (React.createElement(\\\"div\\\", { style: style },\\n            React.createElement(\\\"iframe\\\", { style: iframeStyle, src: iframeSrc })));\\n    }\\n}\\n// Set default properties\\nTwitchPlayer.defaultProps = {\\n    channel: \\\"twitchpresents\\\",\\n    theme: \\\"dark\\\",\\n    layout: \\\"both\\\",\\n};\\n// Items shown in property panel\\nTwitchPlayer.propertyControls = {\\n    channel: { type: framer_1.ControlType.String, title: \\\"Channel Name\\\" },\\n    layout: { type: framer_1.ControlType.Enum, options: [\\\"video\\\", \\\"both\\\", \\\"chat\\\"], optionTitles: [\\\"Video Only\\\", \\\"Video and Chat\\\", \\\"Chat Only\\\"], title: \\\"Layout\\\" },\\n    theme: { type: framer_1.ControlType.Enum, options: [\\\"light\\\", \\\"dark\\\"], optionTitles: [\\\"Light\\\", \\\"Dark\\\"], title: \\\"Theme\\\" },\\n};\\nexports.TwitchPlayer = TwitchPlayer;\\nexports.__info__ = [{ name: \\\"TwitchPlayer\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1R3aXRjaFBsYXllci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsbUJBQW1CLFNBQVMsaUJBQWlCLFVBQVUsa0JBQWtCO0FBQ3JJO0FBQ0EsNERBQTRELG1CQUFtQixTQUFTLGlCQUFpQjtBQUN6RztBQUNBO0FBQ0E7QUFDQSwyREFBMkQsbUJBQW1CO0FBQzlFO0FBQ0E7QUFDQSwyREFBMkQsbUJBQW1CO0FBQzlFO0FBQ0E7QUFDQSw0Q0FBNEMsZUFBZTtBQUMzRCwyQ0FBMkMscUNBQXFDO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBMkQ7QUFDekUsYUFBYSxvSkFBb0o7QUFDakssWUFBWSwrR0FBK0c7QUFDM0g7QUFDQTtBQUNBLHFCQUFxQiwyREFBMkQiLCJmaWxlIjoiLi9jb2RlL1R3aXRjaFBsYXllci50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuLy8gRGVmaW5lIHR5cGUgb2YgcHJvcGVydHlcbmNvbnN0IHN0eWxlID0ge1xuICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgY29sb3I6IFwiIzg4NTVGRlwiLFxuICAgIGJhY2tncm91bmQ6IFwicmdiYSgxMzYsIDg1LCAyNTUsIDAuMSlcIixcbiAgICBvdmVyZmxvdzogXCJoaWRkZW5cIixcbn07XG5jb25zdCBpZnJhbWVTdHlsZSA9IHtcbiAgICBoZWlnaHQ6IFwiMTAwJVwiLFxuICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICBib3JkZXI6IFwibm9uZVwiLFxufTtcbmNsYXNzIFR3aXRjaFBsYXllciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgbGV0IGlmcmFtZVNyYyA9IGBodHRwczovL2VtYmVkLnR3aXRjaC50di8/Y2hhbm5lbD0ke3RoaXMucHJvcHMuY2hhbm5lbH0mdGhlbWU9JHt0aGlzLnByb3BzLnRoZW1lfSZsYXlvdXQ9JHt0aGlzLnByb3BzLmxheW91dH1gO1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5sYXlvdXQgPT0gXCJib3RoXCIpIHtcbiAgICAgICAgICAgIGlmcmFtZVNyYyA9IGBodHRwczovL2VtYmVkLnR3aXRjaC50di8/Y2hhbm5lbD0ke3RoaXMucHJvcHMuY2hhbm5lbH0mdGhlbWU9JHt0aGlzLnByb3BzLnRoZW1lfWA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5wcm9wcy5sYXlvdXQgPT0gXCJjaGF0XCIpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByb3BzLnRoZW1lID09IFwiZGFya1wiKSB7XG4gICAgICAgICAgICAgICAgaWZyYW1lU3JjID0gYGh0dHBzOi8vd3d3LnR3aXRjaC50di9lbWJlZC8ke3RoaXMucHJvcHMuY2hhbm5lbH0vY2hhdD9kYXJrcG9wb3V0YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmcmFtZVNyYyA9IGBodHRwczovL3d3dy50d2l0Y2gudHYvZW1iZWQvJHt0aGlzLnByb3BzLmNoYW5uZWx9L2NoYXRgO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiBzdHlsZSB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiLCB7IHN0eWxlOiBpZnJhbWVTdHlsZSwgc3JjOiBpZnJhbWVTcmMgfSkpKTtcbiAgICB9XG59XG4vLyBTZXQgZGVmYXVsdCBwcm9wZXJ0aWVzXG5Ud2l0Y2hQbGF5ZXIuZGVmYXVsdFByb3BzID0ge1xuICAgIGNoYW5uZWw6IFwidHdpdGNocHJlc2VudHNcIixcbiAgICB0aGVtZTogXCJkYXJrXCIsXG4gICAgbGF5b3V0OiBcImJvdGhcIixcbn07XG4vLyBJdGVtcyBzaG93biBpbiBwcm9wZXJ0eSBwYW5lbFxuVHdpdGNoUGxheWVyLnByb3BlcnR5Q29udHJvbHMgPSB7XG4gICAgY2hhbm5lbDogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5TdHJpbmcsIHRpdGxlOiBcIkNoYW5uZWwgTmFtZVwiIH0sXG4gICAgbGF5b3V0OiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkVudW0sIG9wdGlvbnM6IFtcInZpZGVvXCIsIFwiYm90aFwiLCBcImNoYXRcIl0sIG9wdGlvblRpdGxlczogW1wiVmlkZW8gT25seVwiLCBcIlZpZGVvIGFuZCBDaGF0XCIsIFwiQ2hhdCBPbmx5XCJdLCB0aXRsZTogXCJMYXlvdXRcIiB9LFxuICAgIHRoZW1lOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkVudW0sIG9wdGlvbnM6IFtcImxpZ2h0XCIsIFwiZGFya1wiXSwgb3B0aW9uVGl0bGVzOiBbXCJMaWdodFwiLCBcIkRhcmtcIl0sIHRpdGxlOiBcIlRoZW1lXCIgfSxcbn07XG5leHBvcnRzLlR3aXRjaFBsYXllciA9IFR3aXRjaFBsYXllcjtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcIlR3aXRjaFBsYXllclwiLCBjaGlsZHJlbjogZmFsc2UsIHR5cGU6IFwiY29tcG9uZW50XCIgfV07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./code/TwitchPlayer.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/Twitch_Player.tsx\":\n/*!********************************!*\\\n  !*** ./code/Twitch_Player.tsx ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\n// Define type of property\\nconst style = {\\n    height: \\\"100%\\\",\\n    display: \\\"flex\\\",\\n    alignItems: \\\"center\\\",\\n    justifyContent: \\\"center\\\",\\n    textAlign: \\\"center\\\",\\n    color: \\\"#8855FF\\\",\\n    background: \\\"rgba(136, 85, 255, 0.1)\\\",\\n    overflow: \\\"hidden\\\",\\n};\\nconst iframeStyle = {\\n    height: \\\"100%\\\",\\n    width: \\\"100%\\\",\\n    border: \\\"none\\\",\\n};\\nclass Twitch_Player extends React.Component {\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        let iframeSrc = `https://embed.twitch.tv/?channel=${this.props.channel}&theme=${this.props.theme}&layout=${this.props.layout}`;\\n        if (this.props.layout == \\\"chat\\\") {\\n            iframeSrc = `https://embed.twitch.tv/?channel=${this.props.channel}&theme=${this.props.theme}`;\\n        }\\n        return (React.createElement(\\\"div\\\", { style: style },\\n            React.createElement(\\\"iframe\\\", { style: iframeStyle, src: iframeSrc })));\\n    }\\n}\\n// Set default properties\\nTwitch_Player.defaultProps = {\\n    channel: \\\"twitchpresents\\\",\\n    theme: \\\"light\\\",\\n    layout: \\\"video\\\",\\n};\\n// Items shown in property panel\\nTwitch_Player.propertyControls = {\\n    channel: { type: framer_1.ControlType.String, title: \\\"Channel Name\\\" },\\n    layout: { type: framer_1.ControlType.Enum, options: [\\\"video\\\", \\\"chat\\\"], optionTitles: [\\\"Video\\\", \\\"Video and Chat\\\"], title: \\\"Layout\\\" },\\n    theme: { type: framer_1.ControlType.Enum, options: [\\\"light\\\", \\\"dark\\\"], optionTitles: [\\\"Light\\\", \\\"Dark\\\"], title: \\\"Theme\\\" },\\n};\\nexports.Twitch_Player = Twitch_Player;\\nexports.__info__ = [{ name: \\\"Twitch_Player\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1R3aXRjaF9QbGF5ZXIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELG1CQUFtQixTQUFTLGlCQUFpQixVQUFVLGtCQUFrQjtBQUNySTtBQUNBLDREQUE0RCxtQkFBbUIsU0FBUyxpQkFBaUI7QUFDekc7QUFDQSw0Q0FBNEMsZUFBZTtBQUMzRCwyQ0FBMkMscUNBQXFDO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBMkQ7QUFDekUsYUFBYSwwSEFBMEg7QUFDdkksWUFBWSwrR0FBK0c7QUFDM0g7QUFDQTtBQUNBLHFCQUFxQiw0REFBNEQiLCJmaWxlIjoiLi9jb2RlL1R3aXRjaF9QbGF5ZXIudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IGZyYW1lcl8xID0gcmVxdWlyZShcImZyYW1lclwiKTtcbi8vIERlZmluZSB0eXBlIG9mIHByb3BlcnR5XG5jb25zdCBzdHlsZSA9IHtcbiAgICBoZWlnaHQ6IFwiMTAwJVwiLFxuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgIGNvbG9yOiBcIiM4ODU1RkZcIixcbiAgICBiYWNrZ3JvdW5kOiBcInJnYmEoMTM2LCA4NSwgMjU1LCAwLjEpXCIsXG4gICAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG59O1xuY29uc3QgaWZyYW1lU3R5bGUgPSB7XG4gICAgaGVpZ2h0OiBcIjEwMCVcIixcbiAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgYm9yZGVyOiBcIm5vbmVcIixcbn07XG5jbGFzcyBUd2l0Y2hfUGxheWVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICBsZXQgaWZyYW1lU3JjID0gYGh0dHBzOi8vZW1iZWQudHdpdGNoLnR2Lz9jaGFubmVsPSR7dGhpcy5wcm9wcy5jaGFubmVsfSZ0aGVtZT0ke3RoaXMucHJvcHMudGhlbWV9JmxheW91dD0ke3RoaXMucHJvcHMubGF5b3V0fWA7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLmxheW91dCA9PSBcImNoYXRcIikge1xuICAgICAgICAgICAgaWZyYW1lU3JjID0gYGh0dHBzOi8vZW1iZWQudHdpdGNoLnR2Lz9jaGFubmVsPSR7dGhpcy5wcm9wcy5jaGFubmVsfSZ0aGVtZT0ke3RoaXMucHJvcHMudGhlbWV9YDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZTogc3R5bGUgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIiwgeyBzdHlsZTogaWZyYW1lU3R5bGUsIHNyYzogaWZyYW1lU3JjIH0pKSk7XG4gICAgfVxufVxuLy8gU2V0IGRlZmF1bHQgcHJvcGVydGllc1xuVHdpdGNoX1BsYXllci5kZWZhdWx0UHJvcHMgPSB7XG4gICAgY2hhbm5lbDogXCJ0d2l0Y2hwcmVzZW50c1wiLFxuICAgIHRoZW1lOiBcImxpZ2h0XCIsXG4gICAgbGF5b3V0OiBcInZpZGVvXCIsXG59O1xuLy8gSXRlbXMgc2hvd24gaW4gcHJvcGVydHkgcGFuZWxcblR3aXRjaF9QbGF5ZXIucHJvcGVydHlDb250cm9scyA9IHtcbiAgICBjaGFubmVsOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6IFwiQ2hhbm5lbCBOYW1lXCIgfSxcbiAgICBsYXlvdXQ6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuRW51bSwgb3B0aW9uczogW1widmlkZW9cIiwgXCJjaGF0XCJdLCBvcHRpb25UaXRsZXM6IFtcIlZpZGVvXCIsIFwiVmlkZW8gYW5kIENoYXRcIl0sIHRpdGxlOiBcIkxheW91dFwiIH0sXG4gICAgdGhlbWU6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuRW51bSwgb3B0aW9uczogW1wibGlnaHRcIiwgXCJkYXJrXCJdLCBvcHRpb25UaXRsZXM6IFtcIkxpZ2h0XCIsIFwiRGFya1wiXSwgdGl0bGU6IFwiVGhlbWVcIiB9LFxufTtcbmV4cG9ydHMuVHdpdGNoX1BsYXllciA9IFR3aXRjaF9QbGF5ZXI7XG5leHBvcnRzLl9faW5mb19fID0gW3sgbmFtZTogXCJUd2l0Y2hfUGxheWVyXCIsIGNoaWxkcmVuOiBmYWxzZSwgdHlwZTogXCJjb21wb25lbnRcIiB9XTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./code/Twitch_Player.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/canvas.tsx\":\n/*!*************************!*\\\n  !*** ./code/canvas.tsx ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\n// WARNING: this file is auto generated, any changes will be lost\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nconst canvas = framer_1.CanvasStore.shared({\\\"children\\\":[]});\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL2NhbnZhcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0EsNkNBQTZDIiwiZmlsZSI6Ii4vY29kZS9jYW52YXMudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyBXQVJOSU5HOiB0aGlzIGZpbGUgaXMgYXV0byBnZW5lcmF0ZWQsIGFueSBjaGFuZ2VzIHdpbGwgYmUgbG9zdFxuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY29uc3QgY2FudmFzID0gZnJhbWVyXzEuQ2FudmFzU3RvcmUuc2hhcmVkKCk7IC8vIENBTlZBU19EQVRBO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./code/canvas.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./package.js\":\n/*!********************!*\\\n  !*** ./package.js ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"// The template for the dynamic webpack entry. Be aware of the variables\\n\\nconst packageJson = __webpack_require__(/*! ./package.json */ \\\"./package.json\\\")\\n\\nconst package = {\\n    packageJson,\\n    sourceModules: {},\\n    dependencies: {},\\n}\\n\\n// This is a special webpack thing that watches the whole directory\\n// https://github.com/webpack/docs/wiki/context\\nconst ctx = __webpack_require__(\\\"./code sync recursive \\\\\\\\.(t|j)s(x?)|\\\\\\\\.css$\\\")\\n\\nctx.keys().forEach(key => {\\n    package.sourceModules[key] = () => ctx(key)\\n})\\n\\n// The packages are passed in through a template\\nconst packages = {}\\n\\n                packages[\\\"@framer/jurrehoutkamp.twitch-player\\\"] = () => {\\n                    var package = {}\\n                    try {\\n                        package = __webpack_require__(/*! @framer/jurrehoutkamp.twitch-player */ \\\"../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/jurrehoutkamp.twitch-player/build/index.js\\\")\\n                    } catch (e) {\\n                        console.log(e)\\n                    }\\n                    package.__framer__ = package.__framer__ || {}\\n                    package.__framer__.packageJson = {\\\"main\\\":\\\"build/index.js\\\",\\\"name\\\":\\\"@framer/jurrehoutkamp.twitch-player\\\",\\\"version\\\":\\\"1.1.0\\\",\\\"devDependencies\\\":{\\\"@types/react\\\":\\\"^16.0.31\\\",\\\"framer\\\":\\\"^0.7.2\\\"},\\\"peerDependencies\\\":{\\\"framer\\\":\\\"^0.7.2\\\",\\\"react\\\":\\\"^16.3.0\\\",\\\"react-dom\\\":\\\"^16.3.0\\\"},\\\"framer\\\":{\\\"id\\\":\\\"830adc6a-7c97-4d53-80f5-45e22a749666\\\",\\\"displayName\\\":\\\"Twitch Player\\\"},\\\"author\\\":\\\"Jurre Houtkamp\\\",\\\"license\\\":\\\"MIT\\\",\\\"keywords\\\":[\\\"player\\\"],\\\"design\\\":{\\\"root\\\":{\\\"__class\\\":\\\"RootNode\\\",\\\"children\\\":[{\\\"__class\\\":\\\"CodeComponentNode\\\",\\\"aspectRatio\\\":null,\\\"blur\\\":12,\\\"blurEnabled\\\":0,\\\"blurType\\\":\\\"layer\\\",\\\"borderBottom\\\":1,\\\"borderColor\\\":\\\"#222\\\",\\\"borderEnabled\\\":0,\\\"borderLeft\\\":1,\\\"borderPerSide\\\":false,\\\"borderRight\\\":1,\\\"borderStyle\\\":\\\"solid\\\",\\\"borderTop\\\":1,\\\"borderWidth\\\":1,\\\"bottom\\\":null,\\\"boxShadows\\\":[],\\\"brightness\\\":100,\\\"brightnessEnabled\\\":0,\\\"centerAnchorX\\\":0,\\\"centerAnchorY\\\":0,\\\"children\\\":[],\\\"clip\\\":true,\\\"codeComponentIdentifier\\\":\\\"./Twitch_Chat.tsx_TwitchChat\\\",\\\"codeComponentProps\\\":{\\\"url\\\":\\\"Food\\\"},\\\"codeFunctionFile\\\":null,\\\"codeFunctionIdentifier\\\":null,\\\"codeFunctionName\\\":null,\\\"constraintsLocked\\\":false,\\\"contrast\\\":100,\\\"contrastEnabled\\\":0,\\\"exportOptions\\\":[],\\\"fillColor\\\":\\\"rgba(255,255,255,1)\\\",\\\"fillEnabled\\\":false,\\\"fillGradient\\\":{\\\"__class\\\":\\\"LinearGradient\\\",\\\"alpha\\\":1,\\\"angle\\\":0,\\\"end\\\":\\\"rgba(0,0,0,0)\\\",\\\"start\\\":\\\"black\\\"},\\\"fillImage\\\":null,\\\"fillImagePixelHeight\\\":null,\\\"fillImagePixelWidth\\\":null,\\\"fillImageResize\\\":\\\"fill\\\",\\\"fillType\\\":\\\"color\\\",\\\"grayscale\\\":0,\\\"grayScaleEnabled\\\":0,\\\"height\\\":620,\\\"heightType\\\":0,\\\"hueRotate\\\":0,\\\"hueRotateEnabled\\\":0,\\\"id\\\":\\\"OG3wFmjud\\\",\\\"intrinsicHeight\\\":620,\\\"intrinsicWidth\\\":330,\\\"invert\\\":0,\\\"invertEnabled\\\":0,\\\"left\\\":-10,\\\"locked\\\":false,\\\"name\\\":null,\\\"opacity\\\":1,\\\"originalid\\\":null,\\\"parentid\\\":\\\"XyfUJfNhL\\\",\\\"radius\\\":0,\\\"radiusBottomLeft\\\":0,\\\"radiusBottomRight\\\":0,\\\"radiusIsRelative\\\":false,\\\"radiusPerCorner\\\":false,\\\"radiusTopLeft\\\":0,\\\"radiusTopRight\\\":0,\\\"right\\\":null,\\\"rotation\\\":0,\\\"saturate\\\":100,\\\"saturateEnabled\\\":0,\\\"sepia\\\":0,\\\"sepiaEnabled\\\":0,\\\"top\\\":-303,\\\"visible\\\":true,\\\"width\\\":330,\\\"widthType\\\":0},{\\\"__class\\\":\\\"CodeComponentNode\\\",\\\"aspectRatio\\\":null,\\\"blur\\\":12,\\\"blurEnabled\\\":0,\\\"blurType\\\":\\\"layer\\\",\\\"borderBottom\\\":1,\\\"borderColor\\\":\\\"#222\\\",\\\"borderEnabled\\\":0,\\\"borderLeft\\\":1,\\\"borderPerSide\\\":false,\\\"borderRight\\\":1,\\\"borderStyle\\\":\\\"solid\\\",\\\"borderTop\\\":1,\\\"borderWidth\\\":1,\\\"bottom\\\":null,\\\"boxShadows\\\":[],\\\"brightness\\\":100,\\\"brightnessEnabled\\\":0,\\\"centerAnchorX\\\":0,\\\"centerAnchorY\\\":0,\\\"children\\\":[],\\\"clip\\\":true,\\\"codeComponentIdentifier\\\":\\\"./Twitch.tsx_Twitch\\\",\\\"codeComponentProps\\\":{\\\"url\\\":\\\"Food\\\"},\\\"codeFunctionFile\\\":null,\\\"codeFunctionIdentifier\\\":null,\\\"codeFunctionName\\\":null,\\\"constraintsLocked\\\":false,\\\"contrast\\\":100,\\\"contrastEnabled\\\":0,\\\"exportOptions\\\":[],\\\"fillColor\\\":\\\"rgba(255,255,255,1)\\\",\\\"fillEnabled\\\":false,\\\"fillGradient\\\":{\\\"__class\\\":\\\"LinearGradient\\\",\\\"alpha\\\":1,\\\"angle\\\":0,\\\"end\\\":\\\"rgba(0,0,0,0)\\\",\\\"start\\\":\\\"black\\\"},\\\"fillImage\\\":null,\\\"fillImagePixelHeight\\\":null,\\\"fillImagePixelWidth\\\":null,\\\"fillImageResize\\\":\\\"fill\\\",\\\"fillType\\\":\\\"color\\\",\\\"grayscale\\\":0,\\\"grayScaleEnabled\\\":0,\\\"height\\\":240,\\\"heightType\\\":0,\\\"hueRotate\\\":0,\\\"hueRotateEnabled\\\":0,\\\"id\\\":\\\"B7ACzCofe\\\",\\\"intrinsicHeight\\\":240,\\\"intrinsicWidth\\\":460,\\\"invert\\\":0,\\\"invertEnabled\\\":0,\\\"left\\\":370,\\\"locked\\\":false,\\\"name\\\":null,\\\"opacity\\\":1,\\\"originalid\\\":null,\\\"parentid\\\":\\\"XyfUJfNhL\\\",\\\"radius\\\":0,\\\"radiusBottomLeft\\\":0,\\\"radiusBottomRight\\\":0,\\\"radiusIsRelative\\\":false,\\\"radiusPerCorner\\\":false,\\\"radiusTopLeft\\\":0,\\\"radiusTopRight\\\":0,\\\"right\\\":null,\\\"rotation\\\":0,\\\"saturate\\\":100,\\\"saturateEnabled\\\":0,\\\"sepia\\\":0,\\\"sepiaEnabled\\\":0,\\\"top\\\":-16,\\\"visible\\\":true,\\\"width\\\":460,\\\"widthType\\\":0}],\\\"id\\\":\\\"XyfUJfNhL\\\",\\\"name\\\":null,\\\"originalid\\\":null,\\\"parentid\\\":null,\\\"startPoint\\\":null,\\\"visible\\\":false},\\\"version\\\":42}}\\n                    return package\\n                }\\n\\n                packages[\\\"@framer/framer.device-skin-microsoft-surface-book\\\"] = () => {\\n                    var package = {}\\n                    try {\\n                        package = __webpack_require__(/*! @framer/framer.device-skin-microsoft-surface-book */ \\\"../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-book/build/index.js\\\")\\n                    } catch (e) {\\n                        console.log(e)\\n                    }\\n                    package.__framer__ = package.__framer__ || {}\\n                    package.__framer__.packageJson = {\\\"name\\\":\\\"@framer/framer.device-skin-microsoft-surface-book\\\",\\\"version\\\":\\\"1.0.0\\\",\\\"main\\\":\\\"build/index.js\\\",\\\"license\\\":\\\"MIT\\\",\\\"devDependencies\\\":{\\\"typescript\\\":\\\"^2.9.2\\\"},\\\"framer\\\":{\\\"components\\\":[{\\\"name\\\":\\\"DeviceSkin\\\",\\\"type\\\":\\\"deviceSkin\\\"}]}}\\n                    return package\\n                }\\n\\n                packages[\\\"@framer/framer.device-skin-microsoft-surface-pro-4\\\"] = () => {\\n                    var package = {}\\n                    try {\\n                        package = __webpack_require__(/*! @framer/framer.device-skin-microsoft-surface-pro-4 */ \\\"../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-pro-4/build/index.js\\\")\\n                    } catch (e) {\\n                        console.log(e)\\n                    }\\n                    package.__framer__ = package.__framer__ || {}\\n                    package.__framer__.packageJson = {\\\"name\\\":\\\"@framer/framer.device-skin-microsoft-surface-pro-4\\\",\\\"version\\\":\\\"1.0.0\\\",\\\"main\\\":\\\"build/index.js\\\",\\\"license\\\":\\\"MIT\\\",\\\"devDependencies\\\":{\\\"typescript\\\":\\\"^2.9.2\\\"},\\\"framer\\\":{\\\"components\\\":[{\\\"name\\\":\\\"DeviceSkin\\\",\\\"type\\\":\\\"deviceSkin\\\"}]}}\\n                    return package\\n                }\\n\\n                packages[\\\"@framer/framer.device-skin-sony-w850c\\\"] = () => {\\n                    var package = {}\\n                    try {\\n                        package = __webpack_require__(/*! @framer/framer.device-skin-sony-w850c */ \\\"../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-sony-w850c/build/index.js\\\")\\n                    } catch (e) {\\n                        console.log(e)\\n                    }\\n                    package.__framer__ = package.__framer__ || {}\\n                    package.__framer__.packageJson = {\\\"name\\\":\\\"@framer/framer.device-skin-sony-w850c\\\",\\\"version\\\":\\\"1.0.0\\\",\\\"main\\\":\\\"build/index.js\\\",\\\"license\\\":\\\"MIT\\\",\\\"devDependencies\\\":{\\\"typescript\\\":\\\"^2.9.2\\\"},\\\"framer\\\":{\\\"components\\\":[{\\\"name\\\":\\\"DeviceSkin\\\",\\\"type\\\":\\\"deviceSkin\\\"}]}}\\n                    return package\\n                }\\n\\n                packages[\\\"framer\\\"] = () => {\\n                    var package = {}\\n                    try {\\n                        package = __webpack_require__(/*! framer */ \\\"framer\\\")\\n                    } catch (e) {\\n                        console.log(e)\\n                    }\\n                    package.__framer__ = package.__framer__ || {}\\n                    package.__framer__.packageJson = {\\\"name\\\":\\\"framer\\\",\\\"version\\\":\\\"0.7.5\\\",\\\"main\\\":\\\"build/framer.js\\\",\\\"types\\\":\\\"build/framer.d.ts\\\",\\\"author\\\":\\\"Framer\\\",\\\"license\\\":\\\"MIT\\\",\\\"devDependencies\\\":{\\\"@types/chalk\\\":\\\"^2.2.0\\\",\\\"@types/draft-js\\\":\\\"0.10.19\\\",\\\"@types/enzyme\\\":\\\"^3.1.10\\\",\\\"@types/hsluv\\\":\\\"https://github.com/framer/typed_hsluv#bump\\\",\\\"@types/jest\\\":\\\"^23.0.0\\\",\\\"@types/jest-diff\\\":\\\"^20.0.0\\\",\\\"@types/node\\\":\\\"^9.6.0\\\",\\\"@types/react\\\":\\\"16.3.12\\\",\\\"@types/react-dom\\\":\\\"^16.0.5\\\",\\\"cache-loader\\\":\\\"^1.2.2\\\",\\\"chalk\\\":\\\"^2.4.1\\\",\\\"convert-tsconfig-paths-to-webpack-aliases\\\":\\\"^0.9.2\\\",\\\"css.escape\\\":\\\"^1.5.1\\\",\\\"dts-bundle\\\":\\\"^0.7.3\\\",\\\"enzyme\\\":\\\"^3.3.0\\\",\\\"enzyme-adapter-react-16\\\":\\\"^1.1.1\\\",\\\"fork-ts-checker-webpack-plugin\\\":\\\"^0.4.1\\\",\\\"hoist-non-react-statics\\\":\\\"^2.5.0\\\",\\\"jest\\\":\\\"^23.1.0\\\",\\\"jest-diff\\\":\\\"^22.0.3\\\",\\\"jest-junit\\\":\\\"^3.4.1\\\",\\\"progress-bar-webpack-plugin\\\":\\\"^1.11.0\\\",\\\"raf\\\":\\\"^3.4.0\\\",\\\"react\\\":\\\"^16.3.2\\\",\\\"react-dev-utils\\\":\\\"^5.0.1\\\",\\\"react-dom\\\":\\\"^16.3.2\\\",\\\"ts-jest\\\":\\\"^22.4.5\\\",\\\"ts-loader\\\":\\\"^4.1.0\\\",\\\"tslint\\\":\\\"^5.10.0\\\",\\\"tslint-microsoft-contrib\\\":\\\"^5.0.3\\\",\\\"typescript\\\":\\\"^2.8.3\\\",\\\"watch\\\":\\\"^1.0.2\\\",\\\"webpack\\\":\\\"^4.4.1\\\",\\\"webpack-cli\\\":\\\"^2.0.13\\\",\\\"webpack-dev-server\\\":\\\"^3.1.4\\\",\\\"xcssmatrix\\\":\\\"^0.2.2\\\"},\\\"peerDependencies\\\":{\\\"react\\\":\\\"^16.3.2\\\",\\\"react-dom\\\":\\\"^16.3.2\\\"},\\\"dependencies\\\":{\\\"draft-js\\\":\\\"0.10.4\\\",\\\"eventemitter3\\\":\\\"^3.1.0\\\",\\\"hsluv\\\":\\\"^0.0.3\\\",\\\"immutable\\\":\\\"^3.8.2\\\"},\\\"framer\\\":{\\\"components\\\":[{\\\"name\\\":\\\"Scroll\\\",\\\"children\\\":true,\\\"properties\\\":[{\\\"key\\\":\\\"direction\\\",\\\"title\\\":\\\"Direction\\\",\\\"kind\\\":\\\"enum\\\",\\\"options\\\":[\\\"horizontal\\\",\\\"vertical\\\",\\\"both\\\"]}]},{\\\"name\\\":\\\"Page\\\",\\\"children\\\":true},{\\\"name\\\":\\\"Stack\\\"},{\\\"name\\\":\\\"FramerAppleWatch38\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleWatch42\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSonySmartWatch\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhoneSE\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhone8\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhone8Plus\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhoneX\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexus4\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexus5X\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexus6\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGooglePixel2\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGooglePixel2XL\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerHTCOneA9\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftLumia950\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSamsungNote5\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSamsungGalaxyS8\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPadAir\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPadMini\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPadPro\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexusTablet\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftSurfacePro3\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftSurfacePro4\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIMac\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleThunderboltDisplay\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleMacBook\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleMacBookAir\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleMacBookPro\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerDellXPS\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftSurfaceBook\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSonyW850C\\\",\\\"type\\\":\\\"device\\\"}]},\\\"scripts\\\":{\\\"coverage\\\":\\\"jest --config jest.json --coverage\\\",\\\"test\\\":\\\"jest --config jest.json\\\",\\\"watch\\\":\\\"jest --config jest.json --watch\\\"}}\\n                    return package\\n                }\\n\\npackage.dependencies = packages\\n\\nexports.__framer__ = package\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./package.js\\n\");\n\n/***/ }),\n\n/***/ \"./package.json\":\n/*!**********************!*\\\n  !*** ./package.json ***!\n  \\**********************/\n/*! exports provided: main, license, devDependencies, peerDependencies, framer, author, dependencies, name, default */\n/***/ (function(module) {\n\neval(\"module.exports = {\\\"main\\\":\\\"build/index.js\\\",\\\"license\\\":\\\"MIT\\\",\\\"devDependencies\\\":{\\\"@framer/framer.device-skin-microsoft-surface-book\\\":\\\"^1.0.0\\\",\\\"@framer/framer.device-skin-microsoft-surface-pro-4\\\":\\\"^1.0.0\\\",\\\"@framer/framer.device-skin-sony-w850c\\\":\\\"^1.0.0\\\",\\\"@types/react\\\":\\\"^16.0.31\\\",\\\"framer\\\":\\\"^0.7.5\\\"},\\\"peerDependencies\\\":{\\\"framer\\\":\\\"^0.7.5\\\",\\\"react\\\":\\\"^16.3.0\\\",\\\"react-dom\\\":\\\"^16.3.0\\\"},\\\"framer\\\":{\\\"id\\\":\\\"bcd43506-6594-426c-9bd3-5efdce0d3519\\\",\\\"displayName\\\":\\\"Twitch Player and Chat\\\"},\\\"author\\\":\\\"Sang Lee\\\",\\\"dependencies\\\":{\\\"@framer/jurrehoutkamp.twitch-player\\\":\\\"^1.1.0\\\",\\\"tmi.js\\\":\\\"^1.2.1\\\"},\\\"name\\\":\\\"@framer/sjlee.twitch-player-and-chat\\\"};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL3BhY2thZ2UuanNvbi5qcyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./package.json\\n\");\n\n/***/ }),\n\n/***/ \"framer\":\n/*!******************************************************************************************!*\\\n  !*** external {\"root\":\"Framer\",\"commonjs2\":\"framer\",\"commonjs\":\"framer\",\"amd\":\"framer\"} ***!\n  \\******************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = __WEBPACK_EXTERNAL_MODULE_framer__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiRnJhbWVyXCIsXCJjb21tb25qczJcIjpcImZyYW1lclwiLFwiY29tbW9uanNcIjpcImZyYW1lclwiLFwiYW1kXCI6XCJmcmFtZXJcIn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiZnJhbWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2ZyYW1lcl9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///framer\\n\");\n\n/***/ }),\n\n/***/ \"react\":\n/*!**************************************************************************************!*\\\n  !*** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"} ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = __WEBPACK_EXTERNAL_MODULE_react__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJyZWFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9yZWFjdF9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///react\\n\");\n\n/***/ })\n\n/******/ });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/sjlee.twitch-player-and-chat/build/index.js\n");

/***/ }),

/***/ "./code sync recursive \\.(t|j)s(x?)|\\.css$":
/*!***************************************!*\
  !*** ./code sync \.(t|j)s(x?)|\.css$ ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./App.ts\": \"./code/App.ts\",\n\t\"./Examples.ts\": \"./code/Examples.ts\",\n\t\"./TwitchPlayer.tsx\": \"./code/TwitchPlayer.tsx\",\n\t\"./canvas.tsx\": \"./code/canvas.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlIHN5bmMgXFwuKHR8ailzKHgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9jb2RlIHN5bmMgcmVjdXJzaXZlIFxcLih0fGopcyh4Pyl8XFwuY3NzJC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtYXAgPSB7XG5cdFwiLi9BcHAudHNcIjogXCIuL2NvZGUvQXBwLnRzXCIsXG5cdFwiLi9FeGFtcGxlcy50c1wiOiBcIi4vY29kZS9FeGFtcGxlcy50c1wiLFxuXHRcIi4vVHdpdGNoUGxheWVyLnRzeFwiOiBcIi4vY29kZS9Ud2l0Y2hQbGF5ZXIudHN4XCIsXG5cdFwiLi9jYW52YXMudHN4XCI6IFwiLi9jb2RlL2NhbnZhcy50c3hcIlxufTtcblxuXG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0dmFyIGlkID0gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSk7XG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcblx0cmV0dXJuIG1vZHVsZTtcbn1cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0dmFyIGlkID0gbWFwW3JlcV07XG5cdGlmKCEoaWQgKyAxKSkgeyAvLyBjaGVjayBmb3IgbnVtYmVyIG9yIHN0cmluZ1xuXHRcdHZhciBlID0gbmV3IEVycm9yKCdDYW5ub3QgZmluZCBtb2R1bGUgXCInICsgcmVxICsgJ1wiLicpO1xuXHRcdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0XHR0aHJvdyBlO1xuXHR9XG5cdHJldHVybiBpZDtcbn1cbndlYnBhY2tDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQ29udGV4dEtleXMoKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhtYXApO1xufTtcbndlYnBhY2tDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmU7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tDb250ZXh0O1xud2VicGFja0NvbnRleHQuaWQgPSBcIi4vY29kZSBzeW5jIHJlY3Vyc2l2ZSBcXFxcLih0fGopcyh4Pyl8XFxcXC5jc3MkXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./code sync recursive \\.(t|j)s(x?)|\\.css$\n");

/***/ }),

/***/ "./code/App.ts":
/*!*********************!*\
  !*** ./code/App.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst data = framer_1.Data({\n    background: \"https://clips-media-assets2.twitch.tv/226318388.mp4\"\n});\nexports.addVideo = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        video: data.background,\n    };\n};\nexports.__info__ = [{ name: \"addVideo\", type: \"override\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0FwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIscUNBQXFDIiwiZmlsZSI6Ii4vY29kZS9BcHAudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGZyYW1lcl8xID0gcmVxdWlyZShcImZyYW1lclwiKTtcbmNvbnN0IGRhdGEgPSBmcmFtZXJfMS5EYXRhKHtcbiAgICBiYWNrZ3JvdW5kOiBcImh0dHBzOi8vY2xpcHMtbWVkaWEtYXNzZXRzMi50d2l0Y2gudHYvMjI2MzE4Mzg4Lm1wNFwiXG59KTtcbmV4cG9ydHMuYWRkVmlkZW8gPSAoKSA9PiB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdmlkZW86IGRhdGEuYmFja2dyb3VuZCxcbiAgICB9O1xufTtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcImFkZFZpZGVvXCIsIHR5cGU6IFwib3ZlcnJpZGVcIiB9XTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./code/App.ts\n");

/***/ }),

/***/ "./code/Examples.ts":
/*!**************************!*\
  !*** ./code/Examples.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst data = framer_1.Data({ toggle: true, scale: framer_1.Animatable(1), opacity: framer_1.Animatable(1), rotation: framer_1.Animatable(0) });\nexports.Scale = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        scale: data.scale,\n        onTap() {\n            window[\"__checkBudget__\"]();\n            data.scale.set(0.6);\n            framer_1.animate.spring(data.scale, 1);\n        },\n    };\n};\nexports.Rotate = props => {\n    window[\"__checkBudget__\"]();\n    data.rotation.set(props.rotation);\n    return {\n        rotation: data.rotation,\n        onTap() {\n            window[\"__checkBudget__\"]();\n            framer_1.animate.spring(data.rotation, data.rotation.get() + 90, {\n                tension: 250,\n                friction: 20,\n            });\n        },\n    };\n};\nexports.Fade = props => {\n    window[\"__checkBudget__\"]();\n    data.opacity.set(props.opacity);\n    return {\n        opacity: data.opacity,\n        onTap() {\n            window[\"__checkBudget__\"]();\n            framer_1.animate.linear(data.opacity, 0, 0.2);\n        },\n    };\n};\nexports.SwitchOutput = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        opacity: data.opacity,\n        rotation: data.rotation,\n    };\n};\nexports.SwitchInput = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        onTap() {\n            window[\"__checkBudget__\"]();\n            const toggle = data.toggle;\n            framer_1.animate.spring({ opacity: data.opacity, rotation: data.rotation }, {\n                opacity: toggle ? 0.5 : 1,\n                rotation: toggle ? 360 : 0,\n            }, { tension: 200, friction: 20 });\n            data.toggle = !toggle;\n        },\n    };\n};\nexports.__info__ = [{ name: \"Scale\", type: \"override\" }, { name: \"Rotate\", type: \"override\" }, { name: \"Fade\", type: \"override\" }, { name: \"SwitchOutput\", type: \"override\" }, { name: \"SwitchInput\", type: \"override\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0V4YW1wbGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSw0QkFBNEIsaUhBQWlIO0FBQzdJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsaURBQWlEO0FBQ3RGO0FBQ0E7QUFDQSxhQUFhLEdBQUcsNkJBQTZCO0FBQzdDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQkFBcUIsa0NBQWtDLEdBQUcsbUNBQW1DLEdBQUcsaUNBQWlDLEdBQUcseUNBQXlDLEdBQUcsd0NBQXdDIiwiZmlsZSI6Ii4vY29kZS9FeGFtcGxlcy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY29uc3QgZGF0YSA9IGZyYW1lcl8xLkRhdGEoeyB0b2dnbGU6IHRydWUsIHNjYWxlOiBmcmFtZXJfMS5BbmltYXRhYmxlKDEpLCBvcGFjaXR5OiBmcmFtZXJfMS5BbmltYXRhYmxlKDEpLCByb3RhdGlvbjogZnJhbWVyXzEuQW5pbWF0YWJsZSgwKSB9KTtcbmV4cG9ydHMuU2NhbGUgPSAoKSA9PiB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2NhbGU6IGRhdGEuc2NhbGUsXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBkYXRhLnNjYWxlLnNldCgwLjYpO1xuICAgICAgICAgICAgZnJhbWVyXzEuYW5pbWF0ZS5zcHJpbmcoZGF0YS5zY2FsZSwgMSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLlJvdGF0ZSA9IHByb3BzID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICBkYXRhLnJvdGF0aW9uLnNldChwcm9wcy5yb3RhdGlvbik7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcm90YXRpb246IGRhdGEucm90YXRpb24sXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBmcmFtZXJfMS5hbmltYXRlLnNwcmluZyhkYXRhLnJvdGF0aW9uLCBkYXRhLnJvdGF0aW9uLmdldCgpICsgOTAsIHtcbiAgICAgICAgICAgICAgICB0ZW5zaW9uOiAyNTAsXG4gICAgICAgICAgICAgICAgZnJpY3Rpb246IDIwLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLkZhZGUgPSBwcm9wcyA9PiB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgZGF0YS5vcGFjaXR5LnNldChwcm9wcy5vcGFjaXR5KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvcGFjaXR5OiBkYXRhLm9wYWNpdHksXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBmcmFtZXJfMS5hbmltYXRlLmxpbmVhcihkYXRhLm9wYWNpdHksIDAsIDAuMik7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLlN3aXRjaE91dHB1dCA9ICgpID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvcGFjaXR5OiBkYXRhLm9wYWNpdHksXG4gICAgICAgIHJvdGF0aW9uOiBkYXRhLnJvdGF0aW9uLFxuICAgIH07XG59O1xuZXhwb3J0cy5Td2l0Y2hJbnB1dCA9ICgpID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvblRhcCgpIHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgY29uc3QgdG9nZ2xlID0gZGF0YS50b2dnbGU7XG4gICAgICAgICAgICBmcmFtZXJfMS5hbmltYXRlLnNwcmluZyh7IG9wYWNpdHk6IGRhdGEub3BhY2l0eSwgcm90YXRpb246IGRhdGEucm90YXRpb24gfSwge1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IHRvZ2dsZSA/IDAuNSA6IDEsXG4gICAgICAgICAgICAgICAgcm90YXRpb246IHRvZ2dsZSA/IDM2MCA6IDAsXG4gICAgICAgICAgICB9LCB7IHRlbnNpb246IDIwMCwgZnJpY3Rpb246IDIwIH0pO1xuICAgICAgICAgICAgZGF0YS50b2dnbGUgPSAhdG9nZ2xlO1xuICAgICAgICB9LFxuICAgIH07XG59O1xuZXhwb3J0cy5fX2luZm9fXyA9IFt7IG5hbWU6IFwiU2NhbGVcIiwgdHlwZTogXCJvdmVycmlkZVwiIH0sIHsgbmFtZTogXCJSb3RhdGVcIiwgdHlwZTogXCJvdmVycmlkZVwiIH0sIHsgbmFtZTogXCJGYWRlXCIsIHR5cGU6IFwib3ZlcnJpZGVcIiB9LCB7IG5hbWU6IFwiU3dpdGNoT3V0cHV0XCIsIHR5cGU6IFwib3ZlcnJpZGVcIiB9LCB7IG5hbWU6IFwiU3dpdGNoSW5wdXRcIiwgdHlwZTogXCJvdmVycmlkZVwiIH1dO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./code/Examples.ts\n");

/***/ }),

/***/ "./code/TwitchPlayer.tsx":
/*!*******************************!*\
  !*** ./code/TwitchPlayer.tsx ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __webpack_require__(/*! react */ \"react\");\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\n// Define type of property\nconst style = {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    color: \"#8855FF\",\n    background: \"rgba(136, 85, 255, 0.1)\",\n    overflow: \"hidden\",\n};\nconst iframeStyle = {\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n};\nclass TwitchPlayer extends React.Component {\n    render() {\n        window[\"__checkBudget__\"]();\n        let iframeSrc = `https://embed.twitch.tv/?channel=${this.props.channel}&theme=${this.props.theme}&layout=${this.props.layout}`;\n        if (this.props.layout == \"both\") {\n            iframeSrc = `https://embed.twitch.tv/?channel=${this.props.channel}&theme=${this.props.theme}`;\n        }\n        else if (this.props.layout == \"chat\") {\n            if (this.props.theme == \"dark\") {\n                iframeSrc = `https://www.twitch.tv/embed/${this.props.channel}/chat?darkpopout`;\n            }\n            else {\n                iframeSrc = `https://www.twitch.tv/embed/${this.props.channel}/chat`;\n            }\n        }\n        return (React.createElement(\"div\", { style: style },\n            React.createElement(\"iframe\", { style: iframeStyle, src: iframeSrc })));\n    }\n}\n// Set default properties\nTwitchPlayer.defaultProps = {\n    channel: \"twitchpresents\",\n    theme: \"dark\",\n    layout: \"both\",\n};\n// Items shown in property panel\nTwitchPlayer.propertyControls = {\n    channel: { type: framer_1.ControlType.String, title: \"Channel Name\" },\n    layout: { type: framer_1.ControlType.Enum, options: [\"video\", \"both\", \"chat\"], optionTitles: [\"Video Only\", \"Video and Chat\", \"Chat Only\"], title: \"Layout\" },\n    theme: { type: framer_1.ControlType.Enum, options: [\"light\", \"dark\"], optionTitles: [\"Light\", \"Dark\"], title: \"Theme\" },\n};\nexports.TwitchPlayer = TwitchPlayer;\nexports.__info__ = [{ name: \"TwitchPlayer\", children: false, type: \"component\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1R3aXRjaFBsYXllci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsbUJBQW1CLFNBQVMsaUJBQWlCLFVBQVUsa0JBQWtCO0FBQ3JJO0FBQ0EsNERBQTRELG1CQUFtQixTQUFTLGlCQUFpQjtBQUN6RztBQUNBO0FBQ0E7QUFDQSwyREFBMkQsbUJBQW1CO0FBQzlFO0FBQ0E7QUFDQSwyREFBMkQsbUJBQW1CO0FBQzlFO0FBQ0E7QUFDQSw0Q0FBNEMsZUFBZTtBQUMzRCwyQ0FBMkMscUNBQXFDO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBMkQ7QUFDekUsYUFBYSxvSkFBb0o7QUFDakssWUFBWSwrR0FBK0c7QUFDM0g7QUFDQTtBQUNBLHFCQUFxQiwyREFBMkQiLCJmaWxlIjoiLi9jb2RlL1R3aXRjaFBsYXllci50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuLy8gRGVmaW5lIHR5cGUgb2YgcHJvcGVydHlcbmNvbnN0IHN0eWxlID0ge1xuICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgY29sb3I6IFwiIzg4NTVGRlwiLFxuICAgIGJhY2tncm91bmQ6IFwicmdiYSgxMzYsIDg1LCAyNTUsIDAuMSlcIixcbiAgICBvdmVyZmxvdzogXCJoaWRkZW5cIixcbn07XG5jb25zdCBpZnJhbWVTdHlsZSA9IHtcbiAgICBoZWlnaHQ6IFwiMTAwJVwiLFxuICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICBib3JkZXI6IFwibm9uZVwiLFxufTtcbmNsYXNzIFR3aXRjaFBsYXllciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgbGV0IGlmcmFtZVNyYyA9IGBodHRwczovL2VtYmVkLnR3aXRjaC50di8/Y2hhbm5lbD0ke3RoaXMucHJvcHMuY2hhbm5lbH0mdGhlbWU9JHt0aGlzLnByb3BzLnRoZW1lfSZsYXlvdXQ9JHt0aGlzLnByb3BzLmxheW91dH1gO1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5sYXlvdXQgPT0gXCJib3RoXCIpIHtcbiAgICAgICAgICAgIGlmcmFtZVNyYyA9IGBodHRwczovL2VtYmVkLnR3aXRjaC50di8/Y2hhbm5lbD0ke3RoaXMucHJvcHMuY2hhbm5lbH0mdGhlbWU9JHt0aGlzLnByb3BzLnRoZW1lfWA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5wcm9wcy5sYXlvdXQgPT0gXCJjaGF0XCIpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByb3BzLnRoZW1lID09IFwiZGFya1wiKSB7XG4gICAgICAgICAgICAgICAgaWZyYW1lU3JjID0gYGh0dHBzOi8vd3d3LnR3aXRjaC50di9lbWJlZC8ke3RoaXMucHJvcHMuY2hhbm5lbH0vY2hhdD9kYXJrcG9wb3V0YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmcmFtZVNyYyA9IGBodHRwczovL3d3dy50d2l0Y2gudHYvZW1iZWQvJHt0aGlzLnByb3BzLmNoYW5uZWx9L2NoYXRgO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiBzdHlsZSB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiLCB7IHN0eWxlOiBpZnJhbWVTdHlsZSwgc3JjOiBpZnJhbWVTcmMgfSkpKTtcbiAgICB9XG59XG4vLyBTZXQgZGVmYXVsdCBwcm9wZXJ0aWVzXG5Ud2l0Y2hQbGF5ZXIuZGVmYXVsdFByb3BzID0ge1xuICAgIGNoYW5uZWw6IFwidHdpdGNocHJlc2VudHNcIixcbiAgICB0aGVtZTogXCJkYXJrXCIsXG4gICAgbGF5b3V0OiBcImJvdGhcIixcbn07XG4vLyBJdGVtcyBzaG93biBpbiBwcm9wZXJ0eSBwYW5lbFxuVHdpdGNoUGxheWVyLnByb3BlcnR5Q29udHJvbHMgPSB7XG4gICAgY2hhbm5lbDogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5TdHJpbmcsIHRpdGxlOiBcIkNoYW5uZWwgTmFtZVwiIH0sXG4gICAgbGF5b3V0OiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkVudW0sIG9wdGlvbnM6IFtcInZpZGVvXCIsIFwiYm90aFwiLCBcImNoYXRcIl0sIG9wdGlvblRpdGxlczogW1wiVmlkZW8gT25seVwiLCBcIlZpZGVvIGFuZCBDaGF0XCIsIFwiQ2hhdCBPbmx5XCJdLCB0aXRsZTogXCJMYXlvdXRcIiB9LFxuICAgIHRoZW1lOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkVudW0sIG9wdGlvbnM6IFtcImxpZ2h0XCIsIFwiZGFya1wiXSwgb3B0aW9uVGl0bGVzOiBbXCJMaWdodFwiLCBcIkRhcmtcIl0sIHRpdGxlOiBcIlRoZW1lXCIgfSxcbn07XG5leHBvcnRzLlR3aXRjaFBsYXllciA9IFR3aXRjaFBsYXllcjtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcIlR3aXRjaFBsYXllclwiLCBjaGlsZHJlbjogZmFsc2UsIHR5cGU6IFwiY29tcG9uZW50XCIgfV07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./code/TwitchPlayer.tsx\n");

/***/ }),

/***/ "./code/canvas.tsx":
/*!*************************!*\
  !*** ./code/canvas.tsx ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// WARNING: this file is auto generated, any changes will be lost\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst canvas = framer_1.CanvasStore.shared({\"children\":[]});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL2NhbnZhcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0EsNkNBQTZDIiwiZmlsZSI6Ii4vY29kZS9jYW52YXMudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyBXQVJOSU5HOiB0aGlzIGZpbGUgaXMgYXV0byBnZW5lcmF0ZWQsIGFueSBjaGFuZ2VzIHdpbGwgYmUgbG9zdFxuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY29uc3QgY2FudmFzID0gZnJhbWVyXzEuQ2FudmFzU3RvcmUuc2hhcmVkKCk7IC8vIENBTlZBU19EQVRBO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./code/canvas.tsx\n");

/***/ }),

/***/ "./package.js":
/*!********************!*\
  !*** ./package.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// The template for the dynamic webpack entry. Be aware of the variables\n\nconst packageJson = __webpack_require__(/*! ./package.json */ \"./package.json\")\n\nconst package = {\n    packageJson,\n    sourceModules: {},\n    dependencies: {},\n}\n\n// This is a special webpack thing that watches the whole directory\n// https://github.com/webpack/docs/wiki/context\nconst ctx = __webpack_require__(\"./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\")\n\nctx.keys().forEach(key => {\n    package.sourceModules[key] = () => ctx(key)\n})\n\n// The packages are passed in through a template\nconst packages = {}\n\n                packages[\"@framer/sjlee.twitch-player-and-chat\"] = () => {\n                    var package = {}\n                    try {\n                        package = __webpack_require__(/*! @framer/sjlee.twitch-player-and-chat */ \"../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/sjlee.twitch-player-and-chat/build/index.js\")\n                    } catch (e) {\n                        console.log(e)\n                    }\n                    package.__framer__ = package.__framer__ || {}\n                    package.__framer__.packageJson = {\"main\":\"build/index.js\",\"license\":\"MIT\",\"devDependencies\":{\"@framer/framer.device-skin-microsoft-surface-book\":\"^1.0.0\",\"@framer/framer.device-skin-microsoft-surface-pro-4\":\"^1.0.0\",\"@framer/framer.device-skin-sony-w850c\":\"^1.0.0\",\"@types/react\":\"^16.0.31\",\"framer\":\"^0.7.5\"},\"peerDependencies\":{\"framer\":\"^0.7.5\",\"react\":\"^16.3.0\",\"react-dom\":\"^16.3.0\"},\"framer\":{\"id\":\"bcd43506-6594-426c-9bd3-5efdce0d3519\",\"displayName\":\"Twitch Player and Chat\"},\"author\":\"Sang Lee\",\"dependencies\":{\"@framer/jurrehoutkamp.twitch-player\":\"^1.1.0\",\"tmi.js\":\"^1.2.1\"},\"name\":\"@framer/sjlee.twitch-player-and-chat\",\"version\":\"1.0.0\",\"design\":{\"version\":44,\"root\":{\"parentid\":null,\"children\":[{\"radius\":0,\"isMaster\":false,\"replicaInfo\":null,\"isTarget\":false,\"children\":[],\"centerAnchorX\":0,\"id\":\"zYo5Pa_rx\",\"exportOptions\":[],\"exportIncludesBackground\":true,\"grayScaleEnabled\":0,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"constraintsLocked\":false,\"fillImageResize\":\"fill\",\"aspectRatio\":null,\"blurType\":\"layer\",\"navigationTransition\":\"push\",\"fillColor\":\"rgba(255,255,255,1)\",\"grayscale\":0,\"blendingEnabled\":0,\"top\":0,\"saturate\":100,\"left\":0,\"locked\":false,\"sepiaEnabled\":0,\"fillGradient\":{\"end\":\"rgba(0,0,0,0)\",\"alpha\":1,\"angle\":0,\"__class\":\"LinearGradient\",\"start\":\"black\"},\"sepia\":0,\"radiusTopLeft\":0,\"blur\":12,\"borderColor\":\"#222\",\"isExternalMaster\":null,\"rotation\":0,\"borderLeft\":1,\"fillEnabled\":true,\"right\":null,\"opacity\":1,\"navigationTransitionDirection\":\"left\",\"originalid\":null,\"widthType\":0,\"name\":null,\"previewSettings\":{\"rotate\":false,\"responsive\":false,\"touch\":false,\"__class\":\"PreviewSettings\",\"deviceType\":\"framer/FramerMicrosoftSurfaceBook\",\"skin\":\"Surface Book\",\"zoom\":-1,\"bezel\":true},\"blendingMode\":\"normal\",\"contrast\":100,\"centerAnchorY\":0,\"height\":1000,\"navigationTarget\":null,\"borderWidth\":1,\"codeOverrideName\":null,\"radiusIsRelative\":false,\"hueRotate\":0,\"borderStyle\":\"solid\",\"codeOverrideIdentifier\":null,\"brightnessEnabled\":0,\"borderPerSide\":false,\"saturateEnabled\":0,\"borderRight\":1,\"codeOverrideFile\":null,\"parentid\":\"F6vQw_lhQ\",\"intrinsicWidth\":null,\"radiusBottomLeft\":0,\"boxShadows\":[],\"contrastEnabled\":0,\"borderEnabled\":0,\"radiusPerCorner\":false,\"radiusTopRight\":0,\"invert\":0,\"__class\":\"FrameNode\",\"visible\":true,\"heightType\":0,\"fillType\":\"color\",\"fillImage\":null,\"clip\":true,\"invertEnabled\":0,\"hueRotateEnabled\":0,\"width\":1500,\"intrinsicHeight\":null,\"borderBottom\":1,\"deviceType\":\"framer/FramerMicrosoftSurfaceBook\",\"bottom\":null,\"borderTop\":1,\"radiusBottomRight\":0,\"brightness\":100,\"blurEnabled\":0}],\"id\":\"F6vQw_lhQ\",\"visible\":false,\"__class\":\"RootNode\",\"originalid\":null,\"startPoint\":\"d3qAgpQzU\",\"name\":null}}}\n                    return package\n                }\n\n                packages[\"@framer/framer.device-skin-microsoft-surface-book\"] = () => {\n                    var package = {}\n                    try {\n                        package = __webpack_require__(/*! @framer/framer.device-skin-microsoft-surface-book */ \"../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-book/build/index.js\")\n                    } catch (e) {\n                        console.log(e)\n                    }\n                    package.__framer__ = package.__framer__ || {}\n                    package.__framer__.packageJson = {\"name\":\"@framer/framer.device-skin-microsoft-surface-book\",\"version\":\"1.0.0\",\"main\":\"build/index.js\",\"license\":\"MIT\",\"devDependencies\":{\"typescript\":\"^2.9.2\"},\"framer\":{\"components\":[{\"name\":\"DeviceSkin\",\"type\":\"deviceSkin\"}]}}\n                    return package\n                }\n\n                packages[\"@framer/framer.device-skin-microsoft-surface-pro-4\"] = () => {\n                    var package = {}\n                    try {\n                        package = __webpack_require__(/*! @framer/framer.device-skin-microsoft-surface-pro-4 */ \"../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-microsoft-surface-pro-4/build/index.js\")\n                    } catch (e) {\n                        console.log(e)\n                    }\n                    package.__framer__ = package.__framer__ || {}\n                    package.__framer__.packageJson = {\"name\":\"@framer/framer.device-skin-microsoft-surface-pro-4\",\"version\":\"1.0.0\",\"main\":\"build/index.js\",\"license\":\"MIT\",\"devDependencies\":{\"typescript\":\"^2.9.2\"},\"framer\":{\"components\":[{\"name\":\"DeviceSkin\",\"type\":\"deviceSkin\"}]}}\n                    return package\n                }\n\n                packages[\"@framer/framer.device-skin-sony-w850c\"] = () => {\n                    var package = {}\n                    try {\n                        package = __webpack_require__(/*! @framer/framer.device-skin-sony-w850c */ \"../../../Caches/Framer/projects/bcd43506-6594-426c-9bd3-5efdce0d3519/node_modules/@framer/framer.device-skin-sony-w850c/build/index.js\")\n                    } catch (e) {\n                        console.log(e)\n                    }\n                    package.__framer__ = package.__framer__ || {}\n                    package.__framer__.packageJson = {\"name\":\"@framer/framer.device-skin-sony-w850c\",\"version\":\"1.0.0\",\"main\":\"build/index.js\",\"license\":\"MIT\",\"devDependencies\":{\"typescript\":\"^2.9.2\"},\"framer\":{\"components\":[{\"name\":\"DeviceSkin\",\"type\":\"deviceSkin\"}]}}\n                    return package\n                }\n\n                packages[\"framer\"] = () => {\n                    var package = {}\n                    try {\n                        package = __webpack_require__(/*! framer */ \"framer\")\n                    } catch (e) {\n                        console.log(e)\n                    }\n                    package.__framer__ = package.__framer__ || {}\n                    package.__framer__.packageJson = {\"name\":\"framer\",\"version\":\"0.7.5\",\"main\":\"build/framer.js\",\"types\":\"build/framer.d.ts\",\"author\":\"Framer\",\"license\":\"MIT\",\"devDependencies\":{\"@types/chalk\":\"^2.2.0\",\"@types/draft-js\":\"0.10.19\",\"@types/enzyme\":\"^3.1.10\",\"@types/hsluv\":\"https://github.com/framer/typed_hsluv#bump\",\"@types/jest\":\"^23.0.0\",\"@types/jest-diff\":\"^20.0.0\",\"@types/node\":\"^9.6.0\",\"@types/react\":\"16.3.12\",\"@types/react-dom\":\"^16.0.5\",\"cache-loader\":\"^1.2.2\",\"chalk\":\"^2.4.1\",\"convert-tsconfig-paths-to-webpack-aliases\":\"^0.9.2\",\"css.escape\":\"^1.5.1\",\"dts-bundle\":\"^0.7.3\",\"enzyme\":\"^3.3.0\",\"enzyme-adapter-react-16\":\"^1.1.1\",\"fork-ts-checker-webpack-plugin\":\"^0.4.1\",\"hoist-non-react-statics\":\"^2.5.0\",\"jest\":\"^23.1.0\",\"jest-diff\":\"^22.0.3\",\"jest-junit\":\"^3.4.1\",\"progress-bar-webpack-plugin\":\"^1.11.0\",\"raf\":\"^3.4.0\",\"react\":\"^16.3.2\",\"react-dev-utils\":\"^5.0.1\",\"react-dom\":\"^16.3.2\",\"ts-jest\":\"^22.4.5\",\"ts-loader\":\"^4.1.0\",\"tslint\":\"^5.10.0\",\"tslint-microsoft-contrib\":\"^5.0.3\",\"typescript\":\"^2.8.3\",\"watch\":\"^1.0.2\",\"webpack\":\"^4.4.1\",\"webpack-cli\":\"^2.0.13\",\"webpack-dev-server\":\"^3.1.4\",\"xcssmatrix\":\"^0.2.2\"},\"peerDependencies\":{\"react\":\"^16.3.2\",\"react-dom\":\"^16.3.2\"},\"dependencies\":{\"draft-js\":\"0.10.4\",\"eventemitter3\":\"^3.1.0\",\"hsluv\":\"^0.0.3\",\"immutable\":\"^3.8.2\"},\"framer\":{\"components\":[{\"name\":\"Scroll\",\"children\":true,\"properties\":[{\"key\":\"direction\",\"title\":\"Direction\",\"kind\":\"enum\",\"options\":[\"horizontal\",\"vertical\",\"both\"]}]},{\"name\":\"Page\",\"children\":true},{\"name\":\"Stack\"},{\"name\":\"FramerAppleWatch38\",\"type\":\"device\"},{\"name\":\"FramerAppleWatch42\",\"type\":\"device\"},{\"name\":\"FramerSonySmartWatch\",\"type\":\"device\"},{\"name\":\"FramerAppleIPhoneSE\",\"type\":\"device\"},{\"name\":\"FramerAppleIPhone8\",\"type\":\"device\"},{\"name\":\"FramerAppleIPhone8Plus\",\"type\":\"device\"},{\"name\":\"FramerAppleIPhoneX\",\"type\":\"device\"},{\"name\":\"FramerGoogleNexus4\",\"type\":\"device\"},{\"name\":\"FramerGoogleNexus5X\",\"type\":\"device\"},{\"name\":\"FramerGoogleNexus6\",\"type\":\"device\"},{\"name\":\"FramerGooglePixel2\",\"type\":\"device\"},{\"name\":\"FramerGooglePixel2XL\",\"type\":\"device\"},{\"name\":\"FramerHTCOneA9\",\"type\":\"device\"},{\"name\":\"FramerMicrosoftLumia950\",\"type\":\"device\"},{\"name\":\"FramerSamsungNote5\",\"type\":\"device\"},{\"name\":\"FramerSamsungGalaxyS8\",\"type\":\"device\"},{\"name\":\"FramerAppleIPadAir\",\"type\":\"device\"},{\"name\":\"FramerAppleIPadMini\",\"type\":\"device\"},{\"name\":\"FramerAppleIPadPro\",\"type\":\"device\"},{\"name\":\"FramerGoogleNexusTablet\",\"type\":\"device\"},{\"name\":\"FramerMicrosoftSurfacePro3\",\"type\":\"device\"},{\"name\":\"FramerMicrosoftSurfacePro4\",\"type\":\"device\"},{\"name\":\"FramerAppleIMac\",\"type\":\"device\"},{\"name\":\"FramerAppleThunderboltDisplay\",\"type\":\"device\"},{\"name\":\"FramerAppleMacBook\",\"type\":\"device\"},{\"name\":\"FramerAppleMacBookAir\",\"type\":\"device\"},{\"name\":\"FramerAppleMacBookPro\",\"type\":\"device\"},{\"name\":\"FramerDellXPS\",\"type\":\"device\"},{\"name\":\"FramerMicrosoftSurfaceBook\",\"type\":\"device\"},{\"name\":\"FramerSonyW850C\",\"type\":\"device\"}]},\"scripts\":{\"coverage\":\"jest --config jest.json --coverage\",\"test\":\"jest --config jest.json\",\"watch\":\"jest --config jest.json --watch\"}}\n                    return package\n                }\n\npackage.dependencies = packages\n\nexports.__framer__ = package\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./package.js\n");

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! exports provided: main, license, devDependencies, peerDependencies, framer, author, dependencies, name, version, default */
/***/ (function(module) {

eval("module.exports = {\"main\":\"build/index.js\",\"license\":\"MIT\",\"devDependencies\":{\"@framer/framer.device-skin-microsoft-surface-book\":\"^1.0.0\",\"@framer/framer.device-skin-microsoft-surface-pro-4\":\"^1.0.0\",\"@framer/framer.device-skin-sony-w850c\":\"^1.0.0\",\"@types/react\":\"^16.0.31\",\"framer\":\"^0.7.5\"},\"peerDependencies\":{\"framer\":\"^0.7.5\",\"react\":\"^16.3.0\",\"react-dom\":\"^16.3.0\"},\"framer\":{\"id\":\"bcd43506-6594-426c-9bd3-5efdce0d3519\",\"displayName\":\"Twitch Player and Chat\"},\"author\":\"Sang Lee\",\"dependencies\":{\"@framer/sjlee.twitch-player-and-chat\":\"^1.0.0\",\"tmi.js\":\"^1.2.1\"},\"name\":\"@framer/sjlee.twitch-player-and-chat\",\"version\":\"1.0.0\"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL3BhY2thZ2UuanNvbi5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./package.json\n");

/***/ }),

/***/ "framer":
/*!******************************************************************************************!*\
  !*** external {"root":"Framer","commonjs2":"framer","commonjs":"framer","amd":"framer"} ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_framer__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiRnJhbWVyXCIsXCJjb21tb25qczJcIjpcImZyYW1lclwiLFwiY29tbW9uanNcIjpcImZyYW1lclwiLFwiYW1kXCI6XCJmcmFtZXJcIn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiZnJhbWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2ZyYW1lcl9fOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///framer\n");

/***/ }),

/***/ "react":
/*!**************************************************************************************!*\
  !*** external {"root":"React","commonjs2":"react","commonjs":"react","amd":"react"} ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_react__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJyZWFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9yZWFjdF9fOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///react\n");

/***/ })

/******/ });
});