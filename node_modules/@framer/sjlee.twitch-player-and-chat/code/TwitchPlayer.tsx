import * as React from "react";
import { PropertyControls, ControlType } from "framer";
// Define type of property

const style: React.CSSProperties = {
    height: "100%",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    textAlign: "center",
    color: "#8855FF",
    background: "rgba(136, 85, 255, 0.1)",
    overflow: "hidden",
};

const iframeStyle: React.CSSProperties = {
    height: "100%",
    width: "100%",
    border: "none",
};

interface Props {
    channel: string;
    theme?: "light" | "dark";
    layout?: "video" | "both" | "chat";
}

export class TwitchPlayer extends React.Component<Props> {

    // Set default properties
    static defaultProps = {
        channel: "twitchpresents",
        theme: "dark",
        layout: "both",
    }

    // Items shown in property panel
    static propertyControls: PropertyControls = {
        channel: { type: ControlType.String, title: "Channel Name" },
        layout: { type: ControlType.Enum, options: ["video", "both", "chat"], optionTitles: ["Video Only", "Video and Chat", "Chat Only"], title: "Layout" },
        theme: { type: ControlType.Enum, options: ["light", "dark"], optionTitles: ["Light", "Dark"], title: "Theme" },
    }

    render() {
        let iframeSrc = `https://embed.twitch.tv/?channel=${this.props.channel}&theme=${this.props.theme}&layout=${this.props.layout}`;
        if (this.props.layout == "both") {
            iframeSrc = `https://embed.twitch.tv/?channel=${this.props.channel}&theme=${this.props.theme}`;
        } else if (this.props.layout == "chat") {
            if (this.props.theme == "dark") {
                iframeSrc = `https://www.twitch.tv/embed/${this.props.channel}/chat?darkpopout`;
            } else {
                iframeSrc = `https://www.twitch.tv/embed/${this.props.channel}/chat`;
            }
        }

        return (
            <div style={style}>
                <iframe style={iframeStyle} src={iframeSrc}></iframe>
            </div>
        );
    }
}
